@import '../../common/constants';
@import '../../common/mixins';

$line-height: 4.5*$grid-size;

.action-trigger-container {
    @include md-box(flex, relative, ellipsis);
    font-family: var(--font-family-default);
    font-size: var(--icon-size-xsmall);
    line-height: $line-height;
    padding: 0.5*$grid-size $grid-size;
    text-decoration: none;
    outline: none;
    border-radius: $component-border-radius;

    &.action-trigger-label-empty {
        .label {
            margin: 0;
        }
    }

    a > & {
        color: var(--color-hyperlink-rest);
    }

    a:hover > & {
        color: var(--color-hyperlink-hover);
        background-color: var(--color-bg-hover);
    }

    a:focus > & {
        outline-offset: -1px;
        outline: 1px dashed var(--color-border-focus);
        color: var(--color-hyperlink-focus);

        &:not(.disabled) {
            background-color: var(--color-bg-hover);
        }
    }

    &.disabled {
        color: var(--color-text-disabled);
    }

    .suffix {
        margin-left: 2*$grid-size;

        &::before {
            margin: 0;
        }
    }

    .action-trigger-label {
        @include md-box(inline-block);
        line-height: $line-height;
        vertical-align: top;
        font-size: var(--font-size-default);
        margin-left: 2*$grid-size;

        @include rtl {
            margin: 0 2*$grid-size 0 0;
        }

        max-width: 50*$grid-size;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;

        &::before {
            vertical-align: top;
        }
    }
}

.action-trigger-button {
    @include md-button-reset();
    line-height: 0px;
    padding: $grid-size;
    border-radius: $component-border-radius;

    &.disabled {
        cursor: not-allowed;
        color: var(--color-text-disabled);
    }

    &:not(.disabled) {
        .action-trigger-icon {
            color: var(--color-text-action-trigger);
        }

        &:active {
            background-color: var(--color-bg-selected);
        }

        &:hover {
            background-color: var(--color-bg-hover);
        }

        &:focus {
            outline-offset: -1px;
            outline: 1px dashed var(--color-border-focus);
            background-color: var(--color-bg-hover);
        }
    }
}