@import '../../common/constants';
@import '../../common/mixins';

.navigation {
    width: $layout-nav-collapsed-width;

    // don't allow the size of the nav bar to change:
    flex-shrink: 0;
    flex-grow: 0;

    transition-property: width, left, box-shadow;
    transition-duration: $interaction-timing;
    
    overflow: hidden;
    display: flex;
    flex-direction: column;
    background-color: var(--color-bg-navbar);

    @include rtl {
        .expand-icon {
            transform: rotate(180deg);
        }
    }
    
    .scrollable {
        display: flex;
        flex-direction: column;
        overflow-x: hidden;
        overflow-y: auto;
    }

    .separator {
        margin: 0px $gutter-small;
        border-top: 1px solid var(--color-border-navbar-separator);
    }
    
    &:not(.expanded) {
        // if the navbar is collapsed, we need to allow items to scroll (using mouse/touch), 
        // but NOT show the scrollbar. To do this, increase the width of the scrollable
        // component to something larger than the width of the navbar. Since the navbar
        // hides overflow, the scrollbar will be hidden.
        .scrollable {
            width: 2 * $layout-nav-collapsed-width;
            
            :global(.global-nav-item) {
                // override the width of the nav-item to match the navbar width:
                width: $layout-nav-collapsed-width;
            }

            .separator {
                // override the width of the nav item separator:
                width:  $layout-nav-collapsed-width - 2*$gutter-small;
            }
        }
    }

    &.expanded {
        width: $layout-nav-expanded-width;
    }
    
    // don't show global-nav for small screens: it should be part of masthead instead.
    @media(max-width: $screen-sm - 1) {
        display: none;
    }
}

:global(.global-nav-item) {
    height: $layout-nav-collapsed-width;
    width: 100%; // don't hardcode, scrollbar should push out the content.
    
    // don't allow the size to change:
    flex-shrink: 0;
    flex-grow: 0;
    
    // clear styling for <button> elements:
    border: none;
    outline: none;
    margin: 0;
    padding: 0;
    
    // center icon and text and make this non-inline for <a> elements:
    display: flex;
    align-items: center;

    color: var(--color-text-navbar);
    background-color: var(--color-bg-navbar);

    &:hover {
        background-color: var(--color-bg-navbar-hover);

        &:global(.global-nav-item-active) {
            background-color: var(--color-bg-navbar-selected-hover);
        }
    }

    &:active, &:global(.global-nav-item-active) {
        background-color: var(--color-bg-navbar-selected);
    }

    &:focus {
        outline-offset: -1px;
        outline: 1px dashed var(--color-border-navbar-focus);
    }
}

:global(.global-nav-item-icon) {
    font-size: var(--icon-size-xsmall);
    padding: 0px $gutter-small;

    svg {
        height: var(--icon-size-xsmall);
        width: var(--icon-size-xsmall);
        fill: currentColor;
    }
}

:global(.global-nav-item-text) {
    padding-right: $gutter-small;
    @include rtl {
        padding-right: 0;
        padding-left: $gutter-small;
    }
}
