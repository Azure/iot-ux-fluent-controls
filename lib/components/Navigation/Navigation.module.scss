@import '../../common/constants';
@import '../../common/mixins';

$activeBorderHeight: $layout-nav-item-height - (4*$grid-size);

.navigation {
    width: $layout-nav-collapsed-width;

    // don't allow the size of the nav bar to change:
    flex-shrink: 0;
    flex-grow: 0;

    transition-property: width, left, box-shadow;
    transition-duration: $interaction-timing;
    
    overflow: hidden;
    display: flex;
    flex-direction: column;
    background-color: var(--color-bg-navbar);
    border-right: 1px solid var(--color-border-navbar-separator);

    @include rtl {
        border-right: none;
        border-left: 1px solid var(--color-border-navbar-separator);
    }

    .scrollable {
        display: flex;
        flex-direction: column;
        overflow-x: hidden;
        overflow-y: auto;
        flex-flow: column nowrap;

        .global-nav-active-border {
            height: $activeBorderHeight;
            width: $grid-size;
            background-color: var(--color-border-navbar-selected);
            z-index: $z-index-large-step;
            transition: transform 0.3s ease-in-out;
            margin: -($activeBorderHeight + 2*$grid-size) 0 2*$grid-size $grid-size;
            border-radius: 4*$grid-size;
            box-sizing: border-box;
            flex: none;

            @include rtl {
                margin: -($activeBorderHeight + 2*$grid-size) $grid-size 2*$grid-size 0;
            }
        }

        .top-container {
            box-sizing: border-box;
            flex: 1;
        }
    }

    .separator {
        border-top: 1px solid var(--color-border-navbar-separator);
    }

    .far-bottom-container {
        position: relative;

        :global(.global-nav-item-active)::before {
           @extend .global-nav-active-border;
           content: '';
           margin: 0 -1*(1rem - $grid-size) !important;
           position: absolute;
        }
    }
    
    &:not(.expanded) {
        // if the navbar is collapsed, we need to allow items to scroll (using mouse/touch), 
        // but NOT show the scrollbar. To do this, increase the width of the scrollable
        // component to something larger than the width of the navbar. Since the navbar
        // hides overflow, the scrollbar will be hidden.
        .scrollable {
            width: 2 * $layout-nav-collapsed-width;
            
            :global(.global-nav-item) {
                // override the width of the nav-item to match the navbar width:
                width: $layout-nav-collapsed-width;
            }
        }
    }

    &.expanded {
        width: $layout-nav-expanded-width;
    }
    
    // don't show global-nav for small screens: it should be part of masthead instead.
    @media(max-width: $screen-sm - 1) {
        display: none;
    }
}

:global(.global-nav-item) {
    height: $layout-nav-item-height;
    width: 100%; // don't hardcode, scrollbar should push out the content.
    padding: 0 1rem;
    
    // don't allow the size to change:
    flex-shrink: 0;
    flex-grow: 0;
    
    // clear styling for <button> elements:
    border: none;
    outline: none;
    margin: 0;
    
    // center icon and text and make this non-inline for <a> elements:
    display: flex;
    align-items: center;

    color: var(--color-text-navbar) !important;
    background-color: var(--color-bg-navbar);

    &:hover {
        background-color: var(--color-bg-navbar-hover);
        color: inherit;

        &:global(.global-nav-item-active) {
            background-color: var(--color-bg-navbar-selected-hover);
        }
    }

    &:active, &:global(.global-nav-item-active) {
        background-color: var(--color-bg-navbar-selected);
        font-weight: 600;
    }

    &:focus {
        outline-offset: -1px;
        outline: 1px dashed var(--color-border-navbar-focus);
        color: inherit;
    }
}

:global(.global-nav-item-icon) {
    font-size: var(--icon-size-xsmall);
    padding-right: $gutter-normal;
    color: inherit;

    @include rtl {
        padding: 0 0 0 $gutter-normal;
    }

    svg {
        height: var(--icon-size-xsmall);
        width: var(--icon-size-xsmall);
        fill: currentColor;
    }
}

:global(.global-nav-item-container-title) {
    padding: $gutter-small;
    font-weight: 600;

    &:hover, &:active, &:focus {
        background-color: unset;
    }
}

.global-nav-items {
    display: flex;
    flex-direction: column;
    height: 100%;
    justify-content: space-between;
}