@import '../../common/constants';
@import '../../common/mixins';

$line-height: 5*$grid-size;
$line-height-small: 4*$grid-size;

$dropdown-z-index: $z-index-medium-step;

.combo-input-container {
    @include md-box(flex, relative);
    width: 100%;
    font-family: var(--font-family-default);
    color: var(--color-text-rest);
    font-size: var(--font-size-default);
    line-height: $line-height;

    .input-container {
        @include md-box(block, relative);
        flex-grow: 1;
    }

    .input {
        @include md-box(block, relative);
        width: 100%;
        height: $input-height;
        outline: none;
        border: 1px solid var(--color-border-rest);
        background-color: var(--color-bg-input-rest);
        border-radius: $component-border-radius;
        padding: 2*$grid-size 8*$grid-size 2*$grid-size 3*$grid-size;

        @include rtl {
            padding: 2*$grid-size 3*$grid-size 2*$grid-size 8*$grid-size;
        }

        &:hover, &:focus, &:active {
            // inputs look really weird with a dashed outline, so standardize
            // on the solid selected border for all the above states:
            border: 1px solid var(--color-border-selected);
        }

        &:focus, &:active, &.visible {
            &:not(.disabled) {
                padding-right: 16*$grid-size;

                @include rtl {
                    padding-right: 2*$grid-size;
                    padding-left: 16*$grid-size;
                }
            }

            &.show-cancel:not(.disabled) {
                + .cancel {
                    display: inline-block;
                    color: var(--color-text-regular);
                    pointer-events: auto;
                }
            }
        }

        &:disabled {
            color: var(--color-text-disabled);
            border: 1px solid var(--color-border-disabled);
            background-color: var(--color-bg-input-disabled);

            &::placeholder {
                color: var(--color-text-disabled);
            }
        }

        &::placeholder {
            color: var(--color-text-placeholder);
        }

        &.error:not(:disabled) {
            border: 1px solid var(--color-border-error);
        }

        &::-ms-clear {
            display: none;
        }

        &:invalid {
            box-shadow: none;
        }
    }

    .cancel {
        @include md-box(display-none, absolute);
        color: var(--color-text-regular);
        font-size: var(--font-size-default);
        line-height: $line-height-small;
        padding: $grid-size;
        top: $grid-size;
        border: none;
        background-color: transparent;
        outline: none;
        pointer-events: none;
        cursor: pointer;
        right: 8*$grid-size;

        @include rtl {
            right: unset;
            left: 8*$grid-size;
        }

        &:active, &:focus {
            color: var(--color-text-regular);
            pointer-events: auto;
        }
    }

    .chevron {
        @include md-box(absolute, block);
        font-size: var(--font-size-small);
        color: var(--color-text-chevron);
        top: 2*$grid-size;
        pointer-events: none;
        right: 2*$grid-size;

        @include rtl {
            right: unset;
            left: 2*$grid-size;
        }

        &.disabled {
            color: var(--color-text-disabled);
        }
    }

    .dropdown:not(.above) {
        @include md-box(inline-block, absolute);
        left: 0px;
        top: 100%;
    }

    .dropdown.above {
        @include md-box(inline-block, absolute);
        left: 0px;
        top: -2*$grid-size;
        transform: translateY(-100%);
    }
}

.dropdown {
    @include md-box(inline-block, relative);
    width: 100%;
    max-height: $dropdown-max-height;
    overflow-y: auto;
    background-color: var(--color-bg-input-rest);
    border: 1px solid var(--color-border-rest);
}

.dropdown > div {
    @include md-box(inline-block, relative);
    width: 100%;
    padding: $grid-size 0px;
}

.option {
    @include md-box(block);
    width: 100%;
    min-height: $option-height;
    line-height: $line-height-small;
    padding: 0px 3*$grid-size;

    border: none;
    box-shadow: none;
    outline: none;
    border-radius: 0px;
    text-align: left;
    background-color: var(--color-bg-input-rest);
    color: var(--color-text-rest);

    &:not(.disabled) {
        cursor: pointer;
    }

    &.selected {
        color: var(--color-text-rest);
        background-color: var(--color-bg-selected);
    }

    &.hover:not(.disabled) {
        &:not(.selected) {
            background-color: var(--color-bg-hover);
        }

        &.selected {
            background-color: var(--color-bg-selected);
        }

        &:active {
            color: var(--color-text-rest);
            background-color: var(--color-bg-selected);
        }
    }

    &.disabled {
        color: var(--color-text-disabled);
    }
}