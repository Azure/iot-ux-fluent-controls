@import '../../common/constants';
@import '../../common/mixins';

$text-area-min-height: 13*$grid-size;

.textarea-container {
    @include md-box(block, relative);

    .textarea-ghost {
        position: absolute;
        top: 0px;
        left: 0px;
        right: 0px;
        visibility: hidden;
        white-space: pre-wrap;
        overflow-wrap: break-word;
        /** 
         * padding-right is slightly larger than the scrollbar width. If the
         * ghost text box doesn't account for these it won't have a long enough
         * height to account for all of the text. It instead gets squished down
         * more by the scroll bar in the real text area.
         */
        padding-right: 6*$grid-size;
    }
}

.textarea {
    @include md-box(block, relative);
    width: 100%;
    min-height: $text-area-min-height;
    padding: 2*$grid-size 2*$grid-size 2*$grid-size 3*$grid-size;

    border: 1px solid var(--color-foreground-secondary);
    background-color: var(--color-content-background-primary);
    outline: none;
    border-radius: $component-border-radius;

    &:active, &:hover, &:focus {
        // inputs look really weird with a dashed outline, so standardize
        // on the solid selected border for all the above states:
        border: 1px solid var(--color-accent-hover);
    }

    &:disabled {
        color: var(--color-foreground-disabled);
        border: 1px solid var(--color-foreground-disabled);
        background-color: var(--color-state-disabled);
        cursor: not-allowed;
        resize: none;

        &::placeholder {
            color: var(--color-foreground-disabled);
        }
    }

    &::placeholder {
        color: var(--color-foreground-inactive);
    }

    &.error:not(:disabled) {
        border: 1px solid var(--color-status-danger);
    }

    &::-ms-clear {
        display: none;
    }

    &:invalid {
        box-shadow: none;
    }
}
