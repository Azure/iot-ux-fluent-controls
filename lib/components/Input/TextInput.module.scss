@import '../../common/constants';
@import '../../common/mixins';

.text-input-container {
    @include md-box(flex, relative);
    width: 100%;
}

.input-container {
    @include md-box(block, relative);
    flex-grow: 1;
}

.input {
    @include md-box(block, relative);
    width: 100%;
    height: $input-height;
    border: 1px solid var(--color-foreground-secondary);
    background-color: var(--color-content-background-primary);
    outline: none;
    max-width: 100%;
    border-radius: $component-border-radius;
    padding: $gutter-xxsmall;
    text-overflow: ellipsis;

    &:active, &:hover, &:focus {
        // inputs look really weird with a dashed outline, so standardize
        // on the solid selected border for all the above states:
        border: 1px solid var(--color-accent-hover);
    }

    &:active, &:focus {
        &.show-cancel:not(:disabled) {
            padding-left: $gutter-xxsmall;
            padding-right: $gutter-big;

            @include rtl {
                padding-right: $gutter-xxsmall;
                padding-left: $gutter-big;
            }

            + .cancel {
                pointer-events: auto;
                color: inherit;
            }
        }
    }

    &:disabled {
        color: var(--color-foreground-disabled);
        border: 1px solid var(--color-foreground-disabled);
        background-color: var(--color-state-disabled);

        &::placeholder {
            color: var(--color-foreground-disabled);
        }
    }

    &::placeholder {
        color: var(--color-foreground-inactive);
    }

    &.error:not(:disabled) {
        border: 1px solid var(--color-status-danger);
    }

    &::-ms-clear {
        display: none;
    }

    &:invalid {
        box-shadow: none;
    }
}

.cancel {
    @include md-box(absolute, float-right);
    color: transparent;
    font-size: var(--font-size-small);
    line-height: var(--line-height-small);
    height: var(--line-height-small);
    top: 0;
    bottom: 0;
    margin: auto 0;
    border: none;
    background-color: transparent;
    outline: none;
    pointer-events: none;
    cursor: pointer;
    right: $gutter-xxsmall;
    font-family: var(--icon-font-family);

    @include rtl {
        right: unset;
        left: $gutter-xxsmall;
    }

    &:active {
        pointer-events: auto;
    }

    &.no-cancel {
        display: none;
    }
}

.prefix {
    @include md-box(table-cell, relative);
    height: $input-height;
    white-space: nowrap;
    flex-grow: 0;
    padding-right: $gutter-xxsmall;

    @include rtl {
        padding-right: unset;
        padding-left: $gutter-xxsmall;
    }
}

.postfix {
    @include md-box(inline-block, relative);
    height: $input-height;
    white-space: nowrap;
    flex-grow: 0;
    padding-left: $gutter-xxsmall;

    @include rtl {
        padding-left: unset;
        padding-right: $gutter-xxsmall;
    }
}

.prefix-addon {
    background-color: transparent;
    padding-right: $gutter-xxsmall;
    border-left: 1px solid var(--color-foreground-secondary);
    border-top:  1px solid var(--color-foreground-secondary);
    border-bottom:  1px solid var(--color-foreground-secondary);
    
    @include rtl {
        padding-right: unset;
        padding-left: $gutter-xxsmall;
    } 
}

.postfix-addon {
    background-color: transparent;
    border-right:  1px solid var(--color-foreground-secondary);
    border-top:  1px solid var(--color-foreground-secondary);
    border-bottom:  1px solid var(--color-foreground-secondary);
    padding-left: $gutter-xxsmall;

    @include rtl {
        padding-left: unset;
        padding-right: $gutter-xxsmall;
    }
}
