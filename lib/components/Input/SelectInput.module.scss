@import '../../common/constants';
@import '../../common/mixins';

.combo-container {
    position: relative;

    .arrow {
        position: absolute;
        font-size: var(--font-size-small);
        height: var(--line-height-small);
        top: calc((#{$input-height} - var(--line-height-small)) / 2);
        pointer-events: none;
        right: $gutter-xxsmall;

        @include rtl {
            right: unset;
            left: $gutter-xxsmall;
        }

        &.disabled {
            color: var(--color-foreground-disabled);
        }
    }

    .combo {
        width: 100%;
        height: $input-height;
        outline: none;
        appearance: none;
        border: 1px solid var(--color-foreground-secondary);
        background-color: var(--color-content-background-primary);
        border-radius: $component-border-radius;
        padding: 0 6*$grid-size 0 3*$grid-size;
        cursor: pointer;

        @include rtl {
            padding: 0 3*$grid-size 0 6*$grid-size;
        }

        option {
            height: $option-height;
            cursor: pointer;

            &.option-hidden {
                display: none;
            }

            &:checked {
                background-color: var(--color-state-selected);
            }

            &:disabled {
                border: 1px solid var(--color-foreground-disabled);
            }

            &:hidden {
                display: none;
            }

            &:hover, &:focus {
                background-color: var(--color-state-hover);
            }
        }

        &:active, &:hover, &:focus {
            // inputs look really weird with a dashed outline, so standardize
            // on the solid selected border for all the above states:
            border: 1px solid var(--color-accent);
        }

        &:disabled {
            color: var(--color-foreground-disabled);
            border: 1px solid var(--color-foreground-disabled);
            background-color: var(--color-state-disabled);
            cursor: not-allowed;
        }

        &.error:not(:disabled) {
            border: 1px solid var(--color-status-danger);
        }
    }
}
