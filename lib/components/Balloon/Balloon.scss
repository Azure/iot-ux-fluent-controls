@import '../../common/overrides';
@import '../../common/mixins';

// Spec says 8px but setting to 8.5px to deal with browser rounding errors
$balloon-border: 8.5px solid md-color(shade, 3);
$transparent-border: 8.5px solid md-color(inherit);
$balloon-arrow-size: 2*$grid-size;
$balloon-width: 65*$grid-size;

$background-default-color: md-color(shade, 3);

$text-default-color: md-color(shade, f);

@mixin arrow($location, $offset: 'center') {
    &:before {
        content:'';
        display:block;
        width: 2*$grid;
        height: 2*$grid;
        background-color: inherit;
        position: absolute;
        transform: rotateZ(45deg);
        
        @if $location == 'top' {
            top: -1*$gutter;
            @if $offset == 'start' {
                left: 3*$gutter;
            } @else if $offset == 'end' {
                right: 3*$gutter;
            } @else {
                left: 50%;
                transform: translateX(-50%) rotateZ(45deg);
            }
        } @else if $location == 'left' {
            left: -1*$gutter;
            @if $offset == 'start' {
                top: 3*$gutter;
            } @else if $offset == 'end' {
                bottom: 3*$gutter;
            } @else {
                top: 50%;
                transform: translateY(-50%) rotateZ(45deg);
            }
        } @else if $location == 'right' {
            right: -1*$gutter;
            @if $offset == 'start' {
                top: 3*$gutter;
            } @else if $offset == 'end' {
                bottom: 3*$gutter;
            } @else {
                top: 50%;
                transform: translateY(-50%) rotateZ(45deg);
            }
        } @else {
            bottom: -1*$gutter;
            @if $offset == 'start' {
                left: 3*$gutter;
            } @else if $offset == 'end' {
                right: 3*$gutter;
            } @else {
                left: 50%;
                transform: translateX(-50%) rotateZ(45deg);
            }
        }
    }
}

@mixin position($location, $offset: 'center') {
    @if $location == 'top' {
        top: -3*$gutter;
        @if $offset == 'start' {
            left: 0px;
            transform: translate(0, -100%);
        } @else if $offset == 'end' {
            right: 0px;
            transform: translate(0, -100%);
        } @else {
            left: 50%;
            transform: translate(-50%, -100%);
        }
    } @else if $location == 'left' {
        left: -3*$gutter;
        @if $offset == 'start' {
            top: -1.5*$gutter;
            transform: translate(-100%);
        } @else if $offset == 'end' {
            bottom: -1.5*$gutter;
            transform: translate(-100%);
        } @else {
            top: 50%;
            transform: translate(-100%, -50%);
        }
    } @else if $location == 'right' {
        right: -3*$gutter;
        @if $offset == 'start' {
            top: -1.5*$gutter;
            transform: translate(100%);
        } @else if $offset == 'end' {
            bottom: -1.5*$gutter;
            transform: translate(100%);
        } @else {
            top: 50%;
            transform: translate(100%, -50%);
        }
    } @else {
        bottom: -3*$gutter;
        @if $offset == 'start' {
            left: 0px;
            transform: translate(0, 100%);
        } @else if $offset == 'end' {
            right: 0px;
            transform: translate(0, 100%);
        } @else {
            left: 50%;
            transform: translate(-50%, 100%);
        }
    }
}

.balloon-dropdown {
    @include md-box(inline-block, absolute);
    font-family: $font-family-base;
    box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);
    background-color: $background-default-color;
    color: $text-default-color;
    width: 65*$grid;

    .balloon-inner-container {
        @include md-box(inline-block, relative);
        padding: 3*$gutter 4*$gutter 4*$gutter 4*$gutter;
        color: inherit;
        background-color: inherit;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;

        &.multiline {
            white-space: normal;
        }
    }
    
    header + section {
        margin-top: 4*$gutter;
    }
    
    section + section {
        margin-top: 4*$gutter;
    }

    section + footer {
        margin-top: 4*$gutter;
    }

    &.top-start {
        @include arrow('bottom', 'start');
        
        .balloon-container & {
            @include position('top', 'start');
        }
    }

    &.top-center {
        @include arrow('bottom', 'center');
        
        .balloon-container & {
            @include position('top', 'center');
        }
    }
    
    &.top-end {
        @include arrow('bottom', 'end');
        
        .balloon-container & {
            @include position('top', 'end');
        }
    }

    &.bottom-start {
        @include arrow('top', 'start');
        
        .balloon-container & {
            @include position('bottom', 'start');
        }
    }

    &.bottom-center {
        @include arrow('top', 'center');
        
        .balloon-container & {
            @include position('bottom', 'center');
        }
    }
    
    &.bottom-end {
        @include arrow('top', 'end');
        
        .balloon-container & {
            @include position('bottom', 'end');
        }
    }

    &.left-start {
        @include arrow('right', 'start');
        
        .balloon-container & {
            @include position('left', 'start');
        }
    }

    &.left-center {
        @include arrow('right', 'center');
        
        .balloon-container & {
            @include position('left', 'center');
        }
    }
    
    &.left-end {
        @include arrow('right', 'end');
        
        .balloon-container & {
            @include position('left', 'end');
        }
    }

    &.right-start {
        @include arrow('left', 'start');
        
        .balloon-container & {
            @include position('right', 'start');
        }
    }

    &.right-center {
        @include arrow('left', 'center');
        
        .balloon-container & {
            @include position('right', 'center');
        }
    }
    
    &.right-end {
        @include arrow('left', 'end');
        
        .balloon-container & {
            @include position('right', 'end');
        }
    }
}