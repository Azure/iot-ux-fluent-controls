{"version":3,"sources":["src/method/components/Field/FormLabel.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,8CAA8C;AAC9C,iDAA+F;AAE/F,kCAAuD;AACvD,wCAAyF;AACzF,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;AAoDxC,QAAA,iBAAiB,GAAG,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;AAE1D;;;;GAIG;AACU,QAAA,SAAS,GAA6C,CAAC,KAAqB,EAAE,EAAE;IACzF,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO;QACzB,CAAC,CAAC,oBAAC,iBAAO,IACN,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,KAAK,EAAE,KAAK,CAAC,gBAAgB,EAC7B,QAAQ,EAAE,KAAK,CAAC,eAAe,EAC/B,SAAS,EAAE,GAAG,CAAC,YAAY,CAAC,EAC5B,IAAI,EAAE,kCAAqB,CACvB,KAAK,CAAC,IAAI,CAAC,OAAO,EAClB,EAAC,OAAO,EAAE,EAAC,SAAS,EAAE,GAAG,CAAC,eAAe,CAAC,EAAC,EAAC,EAC5C,CAAC,WAAW,EAAE,kBAAkB,EAAE,SAAS,CAAC,CAC/C;YAED,oBAAC,WAAI,IACD,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,IAAI,EAAE,eAAQ,CAAC,MAAM,EACrB,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,GACvB,CACI,CAAC,CAAC,CAAC,EAAE,CAAC;IAEpB,MAAM,CAAC,CACH,oBAAC,qBAAI,CAAC,GAAG,IACL,SAAS,EAAE,GAAG,CAAC,iBAAiB,EAAE,KAAK,CAAC,SAAS,CAAC,EAClD,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS;QAE1B,oBAAC,qBAAI,CAAC,KAAK,IACP,SAAS,EAAE,GAAG,CAAC,OAAO,EAAE,EAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,EAAC,CAAC,EACrD,OAAO,EAAE,KAAK,CAAC,IAAI,EACnB,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,IAEpB,KAAK,CAAC,QAAQ,CACN;QACZ,OAAO,CACD,CACd,CAAC;AACN,CAAC,CAAC;AAEF,iBAAS,CAAC,YAAY,GAAG;IACrB,IAAI,EAAE,SAAS;IACf,QAAQ,EAAE,KAAK;IACf,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE;QACF,SAAS,EAAE,EAAE;QACb,IAAI,EAAE,EAAE;QACR,IAAI,EAAE;YACF,SAAS,EAAE,EAAE;YACb,KAAK,EAAE,EAAE;SACZ;QACD,OAAO,EAAE;YACL,SAAS,EAAE,EAAE;YACb,gBAAgB,EAAE,EAAE;YACpB,OAAO,EAAE,EAAE;SACd;KACJ;CACJ,CAAC;AAEF,kBAAe,iBAAS,CAAC","file":"FormLabel.js","sourcesContent":["import * as React from 'react';\r\nimport * as classNames from 'classnames/bind';\r\nimport {DivProps, LabelProps, mergeAttributeObjects, Elements as Attr} from '../../Attributes';\r\nimport {MethodNode} from '../../Common';\r\nimport {Icon, IconSize, IconAttributes} from '../Icon';\r\nimport {Balloon, BalloonAlignment, BalloonPosition, BalloonAttributes} from '../Balloon';\r\nconst css = classNames.bind(require('./Field.scss'));\r\n\r\nexport interface FormLabelType {}\r\n\r\nexport interface FormLabelAttributes {\r\n    container?: DivProps;\r\n    text?: LabelProps;\r\n    icon?: IconAttributes;\r\n    balloon?: BalloonAttributes;\r\n}\r\n\r\nexport interface FormLabelProps extends React.Props<FormLabelType> {\r\n    /** HTML element name for label accessibility */\r\n    name: string;\r\n    /** Form field is required (appends a red asterisk to the label) */\r\n    required?: boolean;\r\n    /**\r\n     * Icon to show to the right of the label\r\n     * \r\n     * default: 'info'\r\n     */\r\n    icon?: string;\r\n    /**\r\n     * Help balloon to show when the user mouses over the icon\r\n     * \r\n     * If this property is provided, the icon provided becomes visible and\r\n     * defaults to the 'info' icon if props.icon is empty\r\n     */\r\n    balloon?: MethodNode;\r\n    /**\r\n     * Where to display Balloon relative to child element\r\n     * \r\n     * `BalloonPosition.[Top | Bottom | Left | Right]`\r\n     * \r\n     * Default: BalloonPosition.Top\r\n     */\r\n    balloonPosition?: BalloonPosition;\r\n    /**\r\n     * Alignment of Balloon relative to child\r\n     * \r\n     * `BalloonAlignment.[Start | Center | End]`\r\n     * \r\n     * Default: BalloonAllignment.Center\r\n     */\r\n    balloonAlignment?: BalloonAlignment;\r\n\r\n    /** Classname to append to top level element */\r\n    className?: string;\r\n\r\n    attr?: FormLabelAttributes;\r\n}\r\n\r\nexport const requiredClassName = css('label', 'required');\r\n\r\n/**\r\n * High level generic form field\r\n * \r\n * @param props Control properties (defined in `FormLabelProps` interface)\r\n */\r\nexport const FormLabel: React.StatelessComponent<FormLabelProps> = (props: FormLabelProps) => {\r\n    const balloon = props.balloon\r\n        ? <Balloon\r\n            tooltip={props.balloon}\r\n            align={props.balloonAlignment}\r\n            position={props.balloonPosition}\r\n            className={css('label-icon')}\r\n            attr={mergeAttributeObjects(\r\n                props.attr.balloon,\r\n                {balloon: {className: css('label-balloon')}},\r\n                ['container', 'balloonContainer', 'balloon']\r\n            )}\r\n        >\r\n            <Icon\r\n                icon={props.icon}\r\n                size={IconSize.xsmall}\r\n                attr={props.attr.icon}\r\n            />\r\n        </Balloon> : '';\r\n    \r\n    return (\r\n        <Attr.div\r\n            className={css('label-container', props.className)}\r\n            attr={props.attr.container}\r\n        >\r\n            <Attr.label\r\n                className={css('label', {'required': props.required})}\r\n                htmlFor={props.name} \r\n                attr={props.attr.text}\r\n            >\r\n                {props.children}\r\n            </Attr.label>\r\n            {balloon}\r\n        </Attr.div>\r\n    );\r\n};\r\n\r\nFormLabel.defaultProps = {\r\n    name: undefined,\r\n    required: false,\r\n    icon: 'info',\r\n    attr: {\r\n        container: {},\r\n        text: {},\r\n        icon: {\r\n            container: {},\r\n            label: {}\r\n        },\r\n        balloon: {\r\n            container: {},\r\n            balloonContainer: {},\r\n            balloon: {},\r\n        },\r\n    }\r\n};\r\n\r\nexport default FormLabel;\r\n"]}