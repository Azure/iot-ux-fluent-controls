{"version":3,"sources":["src/method/components/Field/FormError.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,8CAA8C;AAC9C,iDAA4D;AAC5D,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;AAoBrD;;;;GAIG;AACU,QAAA,SAAS,GAA6C,CAAC,KAAqB,EAAE,EAAE;IACzF,MAAM,CAAC,CACH,oBAAC,qBAAI,CAAC,GAAG,IACL,SAAS,EAAE,GAAG,CAAC,aAAa,EAAE;YAC1B,QAAQ,EAAE,KAAK,CAAC,MAAM;SACzB,EAAE,KAAK,CAAC,SAAS,CAAC,EACnB,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,IAEzB,KAAK,CAAC,QAAQ,CACR,CACd,CAAC;AACN,CAAC,CAAC;AAEF,iBAAS,CAAC,YAAY,GAAG;IACrB,IAAI,EAAE;QACF,SAAS,EAAE,EAAE;KAChB;CACJ,CAAC;AAEF,kBAAe,iBAAS,CAAC","file":"FormError.js","sourcesContent":["import * as React from 'react';\r\nimport * as classNames from 'classnames/bind';\r\nimport {DivProps, Elements as Attr} from '../../Attributes';\r\nconst css = classNames.bind(require('./Field.scss'));\r\n\r\nexport interface FormErrorType {}\r\n\r\nexport interface FormErrorAttributes {\r\n    container?: DivProps;\r\n}\r\n\r\nexport interface FormErrorProps extends React.Props<FormErrorType> {\r\n    /** Title tag for error in case of overflow */\r\n    title?: string;\r\n    /** Hide error */\r\n    hidden?: boolean;\r\n\r\n    /** Classname to append to top level element */\r\n    className?: string;\r\n\r\n    attr?: FormErrorAttributes;\r\n}\r\n\r\n/**\r\n * Form Error\r\n * \r\n * @param props Control properties (defined in `FormErrorProps` interface)\r\n */\r\nexport const FormError: React.StatelessComponent<FormErrorProps> = (props: FormErrorProps) => {\r\n    return (\r\n        <Attr.div \r\n            className={css('field-error', {\r\n                'hidden': props.hidden\r\n            }, props.className)}\r\n            title={props.title}\r\n            attr={props.attr.container}\r\n        >\r\n            {props.children}\r\n        </Attr.div>\r\n    );\r\n};\r\n\r\nFormError.defaultProps = {\r\n    attr: {\r\n        container: {}\r\n    }\r\n};\r\n\r\nexport default FormError;\r\n"]}