{"version":3,"sources":["src/method/components/List/ManagementList.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAE/B,mEAA0F;AAM1F;;;;;;;;;GASG;AACU,QAAA,cAAc,GAAkD,CAAC,KAA0B,EAAE,EAAE;IACxG,MAAM,CAAC,KAAK,CAAC,aAAa,CACtB,6CAAqB,EACrB,KAAK,EACL,IAAI,CACP,CAAC;AACN,CAAC,CAAC;AAEF,kBAAe,sBAAc,CAAC","file":"ManagementList.js","sourcesContent":["import * as React from 'react';\r\nimport {MethodNode, GridColumn, SortDirection} from '../../Common';\r\nimport {GenericManagementList, GenericManagementListProps} from './GenericManagementList';\r\n\r\nexport interface ManagementListComponentType {}\r\n\r\nexport type ManagementListProps = GenericManagementListProps<any>;\r\n\r\n/**\r\n * Management List\r\n * \r\n * If you need type checking, you should use `GenericManagementList` with the\r\n * `CreateManagementList` function instead.\r\n * \r\n * Check `GenericManagementList` for documentation on properties\r\n * \r\n * @param props Control properties (defined in `ManagementListProps` interface)\r\n */\r\nexport const ManagementList: React.StatelessComponent<ManagementListProps> = (props: ManagementListProps) => {\r\n    return React.createElement(\r\n        GenericManagementList,\r\n        props,\r\n        null\r\n    );\r\n};\r\n\r\nexport default ManagementList;\r\n"]}