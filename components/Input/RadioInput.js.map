{"version":3,"sources":["src/method/components/Input/RadioInput.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,8CAA8C;AAC9C,iDAA+F;AAC/F,yCAAsD;AACtD,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC,CAAC;AAgD1D;;;;;;GAMG;AACU,QAAA,UAAU,GAA8C,CAAC,KAAsB,EAAE,EAAE;IAC5F,MAAM,OAAO,GAAG,EAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAK,CAAC,OAAO,EAAC,CAAC;IACxE,MAAM,cAAc,GAAG,GAAG,CAAC,iBAAiB,EAAE;QAC1C,SAAS,EAAE,KAAK,CAAC,OAAO;QACxB,QAAQ,EAAE,KAAK,CAAC,MAAM;KACzB,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;IAEpB,MAAM,EAAE,GAAG,GAAG,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;IAE1C,MAAM,OAAO,GAAG,CAAC,KAAK,EAAE,EAAE;QACtB,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC,CAAC;IAEF,MAAM,CAAC,CACH,oBAAC,qBAAI,CAAC,GAAG,IAAC,SAAS,EAAE,cAAc,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS;QAC3D,oBAAC,qBAAI,CAAC,KAAK,IACP,SAAS,EAAE,GAAG,CAAC,aAAa,EAAE,OAAO,CAAC,EACtC,OAAO,EAAE,EAAE,EACX,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK;YAEtB,oBAAC,qBAAI,CAAC,KAAK,IACP,EAAE,EAAE,EAAE,EACN,IAAI,EAAC,OAAO,EACZ,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,MAAM,EAAE,KAAK,CAAC,MAAM,EACpB,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,KAAK,CAAC,SAAS,EAC1B,SAAS,EAAE,KAAK,CAAC,SAAS,IAAI,qBAAY,EAC1C,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,GACxB;YACF,oBAAC,qBAAI,CAAC,IAAI,IACN,SAAS,EAAE,GAAG,CAAC,cAAc,EAAE,OAAO,CAAC,EACvC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,GACxB;YACF,oBAAC,qBAAI,CAAC,IAAI,IACN,SAAS,EAAE,GAAG,CAAC,YAAY,CAAC,EAC5B,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,IAEpB,KAAK,CAAC,KAAK,CACJ;YACZ,oBAAC,qBAAI,CAAC,IAAI,IACN,SAAS,EAAE,GAAG,CAAC,YAAY,EAAE,OAAO,CAAC,EACrC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,GACvB,CACO,CACN,CACd,CAAC;AACN,CAAC,CAAC;AAEF,kBAAU,CAAC,YAAY,GAAG;IACtB,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,SAAS;IAChB,KAAK,EAAE,SAAS;IAChB,QAAQ,EAAE,SAAS;IACnB,OAAO,EAAE,KAAK;IACd,MAAM,EAAE,KAAK;IACb,IAAI,EAAE;QACF,SAAS,EAAE,EAAE;QACb,KAAK,EAAE,EAAE;QACT,KAAK,EAAE,EAAE;QACT,KAAK,EAAE,EAAE;QACT,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,MAAM,EAAE,EAAE;KACb;CACJ,CAAC;AAEF,kBAAe,kBAAU,CAAC","file":"RadioInput.js","sourcesContent":["import * as React from 'react'; \r\nimport * as classNames from 'classnames/bind';\r\nimport {DivProps, SpanProps, InputProps, LabelProps, Elements as Attr} from '../../Attributes';\r\nimport {MethodNode, autoFocusRef} from '../../Common';\r\nconst css = classNames.bind(require('./RadioInput.scss'));\r\n\r\nexport interface RadioInputType {}\r\n\r\nexport interface RadioInputState {\r\n    cancelFocused: boolean;\r\n}\r\n\r\nexport interface RadioInputAttributes {\r\n    container?: DivProps;\r\n    label?: LabelProps;\r\n    input?: InputProps;\r\n    radio?: SpanProps;\r\n    text?: SpanProps;\r\n    fill?: SpanProps;\r\n    border?: SpanProps;\r\n}\r\n\r\nexport interface RadioInputProps extends React.Props<RadioInputType> {\r\n    /** HTML form element name */\r\n    name: string;\r\n    /** Value of HTML input element */\r\n    value: string;\r\n    /** Label for HTML input element */\r\n    label: MethodNode;\r\n\r\n    /** Allow multiple columns for radio button */\r\n    columns?: boolean;\r\n    /** Checked */\r\n    checked?: boolean;\r\n    /** Add required attribute to HTML input element */\r\n    required?: boolean;\r\n    /** Disable HTML input element and apply disabled styling */\r\n    disabled?: boolean;\r\n    /** Hide HTML input element */\r\n    hidden?: boolean;\r\n    /** Autofocus */\r\n    autoFocus?: boolean;\r\n\r\n    /** Callback for HTML radio button element onChange events */\r\n    onChange: (newValue: string) => void;\r\n\r\n    /** Classname to append to top level element */\r\n    className?: string;\r\n\r\n    attr?: RadioInputAttributes;\r\n}\r\n\r\n/**\r\n * Low level radio button control\r\n * \r\n * (Use the `RadioField` control instead when making a form with standard styling)\r\n * \r\n * @param props Control properties (defined in `RadioInputProps` interface)\r\n */\r\nexport const RadioInput: React.StatelessComponent<RadioInputProps> = (props: RadioInputProps) => {\r\n    const classes = {'disabled': props.disabled, 'selected': props.checked};\r\n    const containerClass = css('radio-container', {\r\n        'columns': props.columns,\r\n        'hidden': props.hidden\r\n    }, props.className);\r\n\r\n    const id = `${props.name}_${props.value}`;\r\n\r\n    const onClick = (event) => {\r\n        props.onChange(props.value);\r\n    };\r\n\r\n    return (\r\n        <Attr.div className={containerClass} attr={props.attr.container}>\r\n            <Attr.label\r\n                className={css('radio-label', classes)}\r\n                htmlFor={id}\r\n                attr={props.attr.label}\r\n            >\r\n                <Attr.input\r\n                    id={id}\r\n                    type='radio'\r\n                    value={props.value}\r\n                    name={props.name}\r\n                    disabled={props.disabled}\r\n                    hidden={props.hidden}\r\n                    checked={props.checked}\r\n                    onClick={onClick}\r\n                    autoFocus={props.autoFocus}\r\n                    methodRef={props.autoFocus && autoFocusRef}\r\n                    required={props.required}\r\n                    attr={props.attr.input}\r\n                />\r\n                <Attr.span\r\n                    className={css('radio-button', classes)}\r\n                    attr={props.attr.radio}\r\n                />\r\n                <Attr.span\r\n                    className={css('radio-text')}\r\n                    attr={props.attr.text}\r\n                >\r\n                    {props.label}\r\n                </Attr.span>\r\n                <Attr.span\r\n                    className={css('radio-fill', classes)}\r\n                    attr={props.attr.fill}\r\n                />\r\n            </Attr.label>\r\n        </Attr.div>\r\n    );\r\n};\r\n\r\nRadioInput.defaultProps = {\r\n    name: undefined,\r\n    value: undefined,\r\n    label: undefined,\r\n    onChange: undefined,\r\n    columns: false,\r\n    hidden: false,\r\n    attr: {\r\n        container: {},\r\n        label: {},\r\n        input: {},\r\n        radio: {},\r\n        text: {},\r\n        fill: {},\r\n        border: {},\r\n    }\r\n};\r\n\r\nexport default RadioInput;\r\n"]}