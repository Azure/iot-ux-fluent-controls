{"version":3,"sources":["src/method/components/Input/CheckboxInput.tsx"],"names":[],"mappings":"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","file":"CheckboxInput.js","sourcesContent":["import * as React from 'react'; \r\nimport * as classNames from 'classnames/bind';\r\nimport {MethodNode, autoFocusRef} from '../../Common';\r\nimport {DivProps, LabelProps, SpanProps, InputProps, Elements as Attr} from '../../Attributes';\r\nimport {Icon, IconSize, IconAttributes} from '../Icon';\r\nconst css = classNames.bind(require('./CheckboxInput.scss'));\r\n\r\nexport interface CheckboxInputType {}\r\n\r\nexport interface CheckboxInputState {\r\n    cancelFocused: boolean;\r\n}\r\n\r\nexport interface CheckboxInputAttributes {\r\n    container?: DivProps;\r\n    label?: LabelProps;\r\n    input?: InputProps;\r\n    text?: SpanProps;\r\n    checkbox?: SpanProps;\r\n    indeterminateFill?: SpanProps;\r\n    checkmarkIcon?: IconAttributes;\r\n    border?: SpanProps;\r\n}\r\n\r\nexport interface CheckboxInputProps extends React.Props<CheckboxInputType> {\r\n    /** HTML form element name */\r\n    name: string;\r\n    /** Label for HTML input element */\r\n    label: MethodNode;\r\n\r\n    /** Allow multiple columns for checkbox */\r\n    columns?: boolean;\r\n    /** Checked */\r\n    checked?: boolean;\r\n    /** Apply hidden attribute to checkbox */\r\n    hidden?: boolean;\r\n    /** Add required attribute to HTML input element */\r\n    required?: boolean;\r\n    /** Disable HTML input element and apply disabled styling */\r\n    disabled?: boolean;\r\n    /** Shows the checkbox in indeterminate state */\r\n    indeterminate?: boolean;\r\n    /** Autofocus */\r\n    autoFocus?: boolean;\r\n\r\n    /** Callback for HTML radio button element onChange events */\r\n    onChange: (newValue: boolean) => void;\r\n\r\n    /** Classname to append to top level element */\r\n    className?: string;\r\n\r\n    attr?: CheckboxInputAttributes;\r\n}\r\n\r\n/**\r\n * Low level checkbox control\r\n * \r\n * (Use the `CheckboxField` control instead when making a form with standard styling)\r\n * \r\n * @param props Control properties (defined in `CheckboxInputProps` interface)\r\n */\r\nexport const CheckboxInput: React.StatelessComponent<CheckboxInputProps> = (props: CheckboxInputProps) => {\r\n    const containerClass = css('checkbox-container', {\r\n        'columns': props.columns,\r\n        'disabled': props.disabled,\r\n        'selected': props.checked,\r\n        'indeterminate': props.indeterminate\r\n    }, props.className);\r\n\r\n    const id = `${props.name}_checkbox`;\r\n\r\n    const onChange = (event) => {\r\n        props.onChange(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <Attr.div\r\n            className={containerClass}\r\n            hidden={props.hidden}\r\n            attr={props.attr.container}\r\n        >\r\n            <Attr.label \r\n                className={css('checkbox-label')}\r\n                htmlFor={id}\r\n                attr={props.attr.label}\r\n            >\r\n                <Attr.input\r\n                    id={id}\r\n                    type='checkbox'\r\n                    name={props.name}\r\n                    disabled={props.disabled}\r\n                    hidden={props.hidden}\r\n                    checked={props.checked}\r\n                    required={props.required}\r\n                    onChange={onChange}\r\n                    autoFocus={props.autoFocus}\r\n                    methodRef={props.autoFocus && autoFocusRef}\r\n                    attr={props.attr.input}\r\n                />\r\n                <Attr.span\r\n                    className={css('checkbox-button')}\r\n                    attr={props.attr.checkbox} \r\n                />\r\n                <Attr.span\r\n                    className={css('checkbox-text')}\r\n                    attr={props.attr.text}\r\n                >\r\n                    {props.label}\r\n                </Attr.span>\r\n                <Attr.span\r\n                    className={css('checkbox-fill')}\r\n                    attr={props.attr.indeterminateFill}\r\n                />\r\n                <Icon \r\n                    icon='checkMark'\r\n                    size={IconSize.xsmall}\r\n                    className={css('checkbox-checkmark')}\r\n                    attr={props.attr.checkmarkIcon}\r\n                />\r\n            </Attr.label>\r\n        </Attr.div>\r\n    );\r\n};\r\n\r\nCheckboxInput.defaultProps = {\r\n    name: undefined,\r\n    label: undefined,\r\n    onChange: undefined,\r\n    attr: {\r\n        container: {},\r\n        label: {},\r\n        input: {},\r\n        text: {},\r\n        checkbox: {},\r\n        indeterminateFill: {},\r\n        checkmarkIcon: {},\r\n        border: {},\r\n    }\r\n};\r\n\r\nexport default CheckboxInput;\r\n"]}