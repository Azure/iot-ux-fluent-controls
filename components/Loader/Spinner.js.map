{"version":3,"sources":["src/method/components/Loader/Spinner.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,8CAA8C;AAE9C,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;AASvD;;;;GAIG;AACU,QAAA,OAAO,GAAG,CAAC,KAAmB;IACvC,MAAM,SAAS,GAAG,GAAG,CAAC,iBAAiB,CAAC,CAAC;IACzC,MAAM,kBAAkB,GAAG,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;IAE7D,MAAM,CAAC,CACH,6BAAK,SAAS,EAAE,kBAAkB;QAC9B,6BAAK,SAAS,EAAE,SAAS;YAAE,gCAAW,CAAM;QAC5C,6BAAK,SAAS,EAAE,SAAS;YAAE,gCAAW,CAAM;QAC5C,6BAAK,SAAS,EAAE,SAAS;YAAE,gCAAW,CAAM;QAC5C,6BAAK,SAAS,EAAE,SAAS;YAAE,gCAAW,CAAM;QAC5C,6BAAK,SAAS,EAAE,SAAS;YAAE,gCAAW,CAAM;QAC5C,6BAAK,SAAS,EAAE,SAAS;YAAE,gCAAW,CAAM,CAC1C,CACT,CAAC;AACN,CAAC,CAAC;AAEF,kBAAe,eAAO,CAAC","file":"Spinner.js","sourcesContent":["import * as React from 'react';\r\nimport * as classNames from 'classnames/bind';\r\nimport {Icon, IconSize} from '../Icon';\r\nconst css = classNames.bind(require('./Spinner.scss'));\r\n\r\nexport interface SpinnerType {}\r\n\r\nexport interface SpinnerProps extends React.Props<SpinnerType> {\r\n    /** Classname to append to top level element */\r\n    className?: string;\r\n}\r\n\r\n/**\r\n * Spinner showing Information, Warning, or Error with text, icon, and optional close button\r\n * \r\n * @param props Control properties (defined in `SpinnerProps` interface)\r\n */\r\nexport const Spinner = (props: SpinnerProps) => {\r\n    const className = css('cs-loader-inner');\r\n    const containerClassName = css('cs-loader', props.className);\r\n    \r\n    return (\r\n        <div className={containerClassName}>\r\n            <div className={className}><div></div></div>\r\n            <div className={className}><div></div></div>\r\n            <div className={className}><div></div></div>\r\n            <div className={className}><div></div></div>\r\n            <div className={className}><div></div></div>\r\n            <div className={className}><div></div></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;\r\n\r\n\r\n\r\n"]}