{"version":3,"sources":["src/method/components/GalleryCard/GalleryCard.tsx"],"names":[],"mappings":"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","file":"GalleryCard.js","sourcesContent":["import * as React from 'react';\r\nimport * as classNames from 'classnames/bind';\r\nimport {DivProps, SpanProps, Elements as Attr} from '../../Attributes';\r\nimport {MethodNode} from '../../Common';\r\nimport {Icon, IconSize, IconProps, IconAttributes} from '../Icon';\r\nimport {SolidBackground} from './SolidBackground';\r\nconst css = classNames.bind(require('./GalleryCard.scss'));\r\n\r\nexport interface GalleryCardType {}\r\n\r\nexport interface GalleryCardAttributes {\r\n    container?: DivProps;\r\n    content?: DivProps;\r\n    banner?: DivProps;\r\n}\r\n\r\nexport interface GalleryCardProps extends React.Props<GalleryCardType> {\r\n    /**\r\n     * Element to display as `GalleryCard` background\r\n     * \r\n     * Default: Solid background with color #eaeaea\r\n     * */\r\n    background?: MethodNode;\r\n    /** Banner string to display above the `GalleryCard` background */\r\n    banner?: string;\r\n\r\n    /**\r\n     * Fixed width and height (284 pixels)\r\n     * \r\n     * Default: true\r\n     */\r\n    fixed?: boolean;\r\n    /** Disables interaction CSS */\r\n    disabled?: boolean;\r\n\r\n    /** Classname to append to top level element */\r\n    className?: string;\r\n    /** Classname to append to content element */\r\n    contentClassName?: string;\r\n    /** Data test hook string for testing */\r\n    dataTestHook?: string;\r\n\r\n    attr?: GalleryCardAttributes;\r\n}\r\n\r\n/**\r\n * Gallery Card control\r\n * \r\n * You should usually mark this control as `fixed` because the container\r\n * element gets its width from its content like the background and children\r\n * \r\n * @param props Control properties (Defined in `GalleryCardProps` interface)\r\n */\r\nexport const GalleryCard: React.StatelessComponent<GalleryCardProps> = (props: GalleryCardProps) => {\r\n    let classNames = css({\r\n        'card': true,\r\n        'fixed': !!props.fixed,\r\n        'fullbg': !props.children,\r\n        'disabled': props.disabled\r\n    }, props.className || '');\r\n\r\n    let contentClassName = css({\r\n        'card-content': true,\r\n    }, props.contentClassName);\r\n\r\n    let outputProps: any = {\r\n        className: classNames\r\n    };\r\n\r\n    if (props.dataTestHook) {\r\n        outputProps['data-test-hook'] = props.dataTestHook;\r\n    }\r\n\r\n    const banner = props.banner ? (\r\n        <Banner attr={{container: props.attr.banner}}>{props.banner}</Banner>\r\n    ) : null;\r\n    \r\n    const content = props.children ? (\r\n        <Attr.div className={contentClassName} attr={props.attr.content}>\r\n            {props.children}\r\n        </Attr.div>\r\n    ) : null;\r\n\r\n    return (\r\n        <Attr.div {...outputProps} attr={props.attr.container}>\r\n            {props.background}\r\n            {content}\r\n            {banner}\r\n        </Attr.div>\r\n    );\r\n};\r\n\r\nGalleryCard.defaultProps = {\r\n    fixed: true,\r\n    background: <SolidBackground />,\r\n    attr: {\r\n        container: {},\r\n        content: {},\r\n        banner: {},\r\n    }\r\n};\r\n\r\nexport interface BannerType {}\r\n\r\nexport interface BannerAttributes {\r\n    container?: DivProps;\r\n}\r\n\r\nexport interface BannerProps extends React.Props<BannerType> {\r\n    className?: string;\r\n    attr?: BannerAttributes;\r\n}\r\n\r\n/** TODO: Remove this Banner control. GalleryCard banner is now a string */\r\nexport const Banner: React.StatelessComponent<BannerProps> = (props: BannerProps) => {\r\n    let cls = css({\r\n        'banner': true,\r\n    }, props.className);\r\n\r\n    return (<Attr.div className={cls} attr={props.attr.container}>\r\n        {props.children}\r\n    </Attr.div>);\r\n};\r\n\r\nBanner.defaultProps = {\r\n    attr: {\r\n        container: {}\r\n    }\r\n};\r\n\r\nexport interface GalleryCardIconAttributes {\r\n    text?: SpanProps;\r\n}\r\n\r\nexport interface GalleryCardIconProps extends IconProps {\r\n    title?: string;\r\n    attr?: GalleryCardIconAttributes & IconAttributes;\r\n}\r\n\r\nexport const GalleryCardIcon: React.StatelessComponent<GalleryCardIconProps> = (props: GalleryCardIconProps) => {\r\n    let fontSize;\r\n    if (props.size) {\r\n        // if the size is set, pass fontSize through\r\n        fontSize = props.fontSize;\r\n    } else {\r\n        // if size is not set, then provide a default override for fontSize\r\n        fontSize = props.fontSize ? props.fontSize : 72;\r\n    }\r\n\r\n    const outputProps = {\r\n        icon: props.icon,\r\n        size: props.size,\r\n        color: props.color || 'white',\r\n        centered: props.centered || true,\r\n        fontSize: fontSize,\r\n        className: css('gallery-card-icon', props.className)\r\n    };\r\n\r\n    let title;\r\n    if (props.title) {\r\n        let className = css('icon-title');\r\n        title = (\r\n            <Attr.span className={className} attr={props.attr.text}>\r\n                {props.title}\r\n            </Attr.span>\r\n        );\r\n    }\r\n\r\n    return (<Icon {...outputProps}>{title}</Icon>);\r\n};\r\n\r\nGalleryCardIcon.defaultProps = {\r\n    icon: undefined,\r\n    attr: {\r\n        text: {},\r\n        container: {},\r\n        label: {}\r\n    }\r\n};\r\n\r\nexport default GalleryCard;\r\n"]}