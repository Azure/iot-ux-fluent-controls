{"version":3,"sources":["src/method/components/DateTime/helpers.ts"],"names":[],"mappings":"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","file":"helpers.js","sourcesContent":["import {hasClassName, DateFormat, weekLength} from '../../Common';\r\n\r\nexport const placeholders = [\r\n    'mm/dd/yyyy',\r\n    'dd/mm/yyyy',\r\n    'yyyy/mm/dd'\r\n];\r\n\r\nconst formatters = [\r\n    (year: string, month: string, day: string) => `${month}/${day}/${year}`,\r\n    (year: string, month: string, day: string) => `${day}/${month}/${year}`,\r\n    (year: string, month: string, day: string) => `${year}/${month}/${day}`,\r\n];\r\n\r\nexport const formatDate = (date: Date, format: DateFormat, localTimezone: boolean) => {\r\n    const month = (localTimezone ? date.getMonth() : date.getUTCMonth()) + 1;\r\n    const monthString = month > 9 ? `${month}` : `0${month}`;\r\n    const day = localTimezone ? date.getDate() : date.getUTCDate();\r\n    const dayString = day > 9 ? `${day}` : `0${day}`;\r\n    const year = localTimezone ? date.getFullYear() : date.getUTCFullYear();\r\n    return formatters[format](`${year}`, monthString, dayString);\r\n};\r\n\r\nexport const replaceAt = (value: string, index: number, newValue: string) => {\r\n    return value.substr(0, index) + newValue + value.substr(index, +value.length);\r\n};\r\n\r\n\r\nexport const getLocalWeekdays = (locale) => {\r\n    const date = new Date();\r\n    const dayNames = [];\r\n    date.setDate(date.getDate() - date.getDay());\r\n    for (let day = 0; day < weekLength; day++) {\r\n        dayNames.push(\r\n            date.toLocaleDateString(locale, {weekday: 'short'}).toUpperCase()\r\n        );\r\n        date.setDate(date.getDate() + 1);\r\n    }\r\n\r\n    return dayNames;\r\n};\r\n\r\nexport const getLocalMonths = (locale) => {\r\n    const date = new Date();\r\n    const monthNames = [];\r\n    for (let month = 0; month < 12; month++) {\r\n        date.setMonth(month);\r\n        monthNames.push(\r\n            date.toLocaleDateString(locale, {month: 'long'})\r\n        );\r\n    }\r\n\r\n    return monthNames;\r\n};\r\n"]}