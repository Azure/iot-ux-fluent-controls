{"version":3,"sources":["src/method/components/DateTime/DateField.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAE/B,yCAAoD;AACpD,6CAA8D;AAC9D,kDAAkE;AAwDlE;;;;GAIG;AACU,QAAA,SAAS,GAA6C,CAAC,KAAqB,EAAE,EAAE;IACzF,MAAM,CAAC,CACH,oBAAC,qBAAS,IACN,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,SAAS,EAAE,KAAK,CAAC,SAAS,EAC1B,IAAI,EAAE,KAAK,CAAC,IAAI;QAGhB,oBAAC,uBAAU,IACP,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,SAAS,EAAE,KAAK,CAAC,SAAS,EAC1B,MAAM,EAAE,KAAK,CAAC,MAAM,EACpB,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,EACpB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,SAAS,EAAE,KAAK,CAAC,cAAc,EAC/B,IAAI,EAAE,KAAK,CAAC,IAAI,GAClB,CACM,CACf,CAAC;AACN,CAAC,CAAC;AAEF,iBAAS,CAAC,YAAY,GAAG;IACrB,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,SAAS;IAChB,QAAQ,EAAE,SAAS;IACnB,MAAM,EAAE,mBAAU,CAAC,QAAQ;IAC3B,QAAQ,EAAE,CAAC,CAAC;IACZ,aAAa,EAAE,IAAI;IACnB,SAAS,EAAE,KAAK;IAChB,IAAI,EAAE;QACF,cAAc,EAAE,EAAE;QAClB,UAAU,EAAE,EAAE;QACd,YAAY,EAAE,EAAE;QAChB,UAAU,EAAE,EAAE;QACd,SAAS,EAAE,EAAE;QACb,cAAc,EAAE,EAAE;QAClB,KAAK,EAAE,EAAE;QACT,SAAS,EAAE,EAAE;QACb,iBAAiB,EAAE,EAAE;QACrB,gBAAgB,EAAE,EAAE;QACpB,QAAQ,EAAE,EAAE;KACf;CACJ,CAAC;AAEF,kBAAe,iBAAS,CAAC","file":"DateField.js","sourcesContent":["import * as React from 'react';\r\nimport * as classNames from 'classnames/bind';\r\nimport {MethodNode, DateFormat} from '../../Common';\r\nimport {DatePicker, DatePickerAttributes} from './DatePicker';\r\nimport {FormField, FormFieldAttributes} from '../Field/FormField';\r\n\r\nexport interface DateFieldType {}\r\n\r\nexport interface DateFieldProps extends React.Props<DateFieldType> {\r\n    /** HTML form element name */\r\n    name: string;\r\n    /**\r\n     * Initial value of date picker\r\n     * \r\n     * The onChange callback API does not receives invalid Date UTC ISO strings\r\n     * so we can only provide an initialValue to the DatePicker\r\n     */\r\n    initialValue?: Date | string;\r\n    \r\n    /** Tab index for calendar control */\r\n    tabIndex?: number;\r\n    /**\r\n     * Display the date in local timezone instead of GMT\r\n     *\r\n     * Default: true\r\n     */\r\n    localTimezone?: boolean;\r\n    /**\r\n     * Show Calendar below date picker input\r\n     */\r\n    showAbove?: boolean;\r\n\r\n    /** Date format in text input */\r\n    format?: DateFormat;\r\n\r\n    /** Label to display above input element */\r\n    label: MethodNode;\r\n    /** Error to display below input element */\r\n    error?: MethodNode;\r\n    /** Error HTML title in case of overflow */\r\n    errorTitle?: string;\r\n\r\n    /** Disable HTML input element */\r\n    disabled?: boolean;\r\n    /** Form field is required (appends a red asterisk to the label) */\r\n    required?: boolean;\r\n    /** Display horizontal loading animation instead of error */\r\n    loading?: boolean;\r\n    \r\n    /** Callback for HTML input element `onChange` events */\r\n    onChange: (newValue: string) => void;\r\n\r\n    /** Classname to append to top level element */\r\n    className?: string;\r\n    /** Classname to append to top level element of TextInput */\r\n    inputClassName?: string;\r\n\r\n    attr?: DatePickerAttributes & FormFieldAttributes;\r\n}\r\n\r\n/**\r\n * High level form text field\r\n * \r\n * @param props Control properties (defined in `DateFieldProps` interface)\r\n */\r\nexport const DateField: React.StatelessComponent<DateFieldProps> = (props: DateFieldProps) => {\r\n    return (\r\n        <FormField\r\n            name={props.name}\r\n            label={props.label}\r\n            error={props.error}\r\n            errorTitle={props.errorTitle}\r\n            loading={props.loading}\r\n            required={props.required}\r\n            className={props.className}\r\n            attr={props.attr}\r\n            \r\n        >\r\n            <DatePicker\r\n                name={props.name}\r\n                initialValue={props.initialValue}\r\n                localTimezone={props.localTimezone}\r\n                tabIndex={props.tabIndex}\r\n                showAbove={props.showAbove}\r\n                format={props.format}\r\n                error={!!props.error}\r\n                disabled={props.disabled}\r\n                required={props.required}\r\n                onChange={props.onChange}\r\n                className={props.inputClassName}\r\n                attr={props.attr}\r\n            />\r\n        </FormField>\r\n    );\r\n};\r\n\r\nDateField.defaultProps = {\r\n    name: undefined,\r\n    label: undefined,\r\n    onChange: undefined,\r\n    format: DateFormat.MMDDYYYY,\r\n    tabIndex: -1,\r\n    localTimezone: true,\r\n    showAbove: false,\r\n    attr: {\r\n        fieldContainer: {},\r\n        fieldLabel: {},\r\n        fieldContent: {},\r\n        fieldError: {},\r\n        container: {},\r\n        inputContainer: {},\r\n        input: {},\r\n        inputIcon: {},\r\n        dropdownContainer: {},\r\n        dropdownTriangle: {},\r\n        calendar: {},\r\n    }\r\n};\r\n\r\nexport default DateField;\r\n"]}