{"version":3,"sources":["src/method/components/DateTime/TimeField.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAG/B,2CAA2D;AAC3D,kDAAkE;AAkDlE;;;;GAIG;AACU,QAAA,SAAS,GAA6C,CAAC,KAAqB,EAAE,EAAE;IACzF,MAAM,CAAC,CACH,oBAAC,qBAAS,IACN,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,UAAU,EAAE,KAAK,CAAC,UAAU,EAC5B,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,SAAS,EAAE,KAAK,CAAC,SAAS,EAC1B,IAAI,EAAE,KAAK,CAAC,IAAI;QAEhB,oBAAC,qBAAS,IACN,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,KAAK,EAAE,KAAK,CAAC,KAAK,EAClB,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,OAAO,EAAE,KAAK,CAAC,OAAO,EACtB,aAAa,EAAE,KAAK,CAAC,aAAa,EAClC,WAAW,EAAE,KAAK,CAAC,WAAW,EAC9B,YAAY,EAAE,KAAK,CAAC,YAAY,EAChC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,EACpB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,QAAQ,EAAE,KAAK,CAAC,QAAQ,EACxB,SAAS,EAAE,KAAK,CAAC,cAAc,EAC/B,IAAI,EAAE,KAAK,CAAC,IAAI,GAClB,CACM,CACf,CAAC;AACN,CAAC,CAAC;AAEF,iBAAS,CAAC,YAAY,GAAG;IACrB,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,SAAS;IAChB,QAAQ,EAAE,SAAS;IACnB,WAAW,EAAE,KAAK;IAClB,YAAY,EAAE,KAAK;IACnB,QAAQ,EAAE,KAAK;IACf,aAAa,EAAE,IAAI;IACnB,OAAO,EAAE,IAAI;IACb,OAAO,EAAE,IAAI;IACb,IAAI,EAAE;QACF,cAAc,EAAE,EAAE;QAClB,UAAU,EAAE,EAAE;QACd,YAAY,EAAE,EAAE;QAChB,UAAU,EAAE,EAAE;QACd,SAAS,EAAE,EAAE;QACb,UAAU,EAAE,EAAE;QACd,UAAU,EAAE,EAAE;QACd,YAAY,EAAE,EAAE;QAChB,YAAY,EAAE,EAAE;QAChB,YAAY,EAAE,EAAE;QAChB,YAAY,EAAE,EAAE;QAChB,YAAY,EAAE,EAAE;QAChB,YAAY,EAAE,EAAE;KACnB;CACJ,CAAC;AAEF,kBAAe,iBAAS,CAAC","file":"TimeField.js","sourcesContent":["import * as React from 'react';\r\nimport * as classNames from 'classnames/bind';\r\nimport {MethodNode} from '../../Common';\r\nimport {TimeInput, TimeInputAttributes} from './TimeInput';\r\nimport {FormField, FormFieldAttributes} from '../Field/FormField';\r\n\r\nexport interface TimeFieldType {}\r\n\r\nexport interface TimeFieldProps extends React.Props<TimeFieldType> {\r\n    /** HTML form element name */\r\n    name: string;\r\n    /** Value */\r\n    value?: string | Date;\r\n    /** Label for \"AM\" select option */\r\n    amLabel?: string;\r\n    /** Label for \"PM\" select option */\r\n    pmLabel?: string;\r\n\r\n    /**\r\n     * Show the time in the local timezone instead of GMT\r\n     *\r\n     * Default: true\r\n     */\r\n    localTimezone?: boolean;\r\n    /** Display the seconds dropdown */\r\n    showSeconds?: boolean;\r\n    /** Use 24 hour clock */\r\n    militaryTime?: boolean;\r\n    \r\n    /** Label to display above input element */\r\n    label: MethodNode;\r\n    /** Error to display below input element */\r\n    error?: MethodNode;\r\n    /** Error HTML title in case of overflow */\r\n    errorTitle?: string;\r\n\r\n    /** Disable HTML input element */\r\n    disabled?: boolean;\r\n    /** Form field is required (appends a red asterisk to the label) */\r\n    required?: boolean;\r\n    /** Display horizontal loading animation instead of error */\r\n    loading?: boolean;\r\n    \r\n    /** Callback for HTML input element `onChange` events */\r\n    onChange: (newValue: string) => void;\r\n\r\n    /** Classname to append to top level element */\r\n    className?: string;\r\n    /** Classname to append to top level element of TextInput */\r\n    inputClassName?: string;\r\n\r\n    attr?: TimeInputAttributes & FormFieldAttributes;\r\n}\r\n\r\n/**\r\n * High level form text field\r\n * \r\n * @param props Control properties (defined in `TimeFieldProps` interface)\r\n */\r\nexport const TimeField: React.StatelessComponent<TimeFieldProps> = (props: TimeFieldProps) => {\r\n    return (\r\n        <FormField\r\n            name={props.name}\r\n            label={props.label}\r\n            error={props.error}\r\n            errorTitle={props.errorTitle}\r\n            loading={props.loading}\r\n            required={props.required}\r\n            className={props.className}\r\n            attr={props.attr}\r\n        >\r\n            <TimeInput\r\n                name={props.name}\r\n                value={props.value}\r\n                amLabel={props.amLabel}\r\n                pmLabel={props.pmLabel}\r\n                localTimezone={props.localTimezone}\r\n                showSeconds={props.showSeconds}\r\n                militaryTime={props.militaryTime}\r\n                error={!!props.error}\r\n                disabled={props.disabled}\r\n                onChange={props.onChange}\r\n                className={props.inputClassName}\r\n                attr={props.attr}\r\n            />\r\n        </FormField>\r\n    );\r\n};\r\n\r\nTimeField.defaultProps = {\r\n    name: undefined,\r\n    label: undefined,\r\n    onChange: undefined,\r\n    showSeconds: false,\r\n    militaryTime: false,\r\n    disabled: false,\r\n    localTimezone: true,\r\n    amLabel: 'AM',\r\n    pmLabel: 'PM',\r\n    attr: {\r\n        fieldContainer: {},\r\n        fieldLabel: {},\r\n        fieldContent: {},\r\n        fieldError: {},\r\n        container: {},\r\n        hourSelect: {},\r\n        hourOption: {},\r\n        minuteSelect: {},\r\n        minuteOption: {},\r\n        secondSelect: {},\r\n        secondOption: {},\r\n        periodSelect: {},\r\n        periodOption: {},\r\n    }\r\n};\r\n\r\nexport default TimeField;\r\n"]}