{"version":3,"sources":["src/method/components/ActionTrigger/ActionTrigger.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,8CAA8C;AAC9C,kCAAuD;AACvD,iDAA4D;AAC5D,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC;AA2B7D;;;;GAIG;AACU,QAAA,aAAa,GAAiD,CAAC,KAAyB,EAAE,EAAE;IACrG,MAAM,SAAS,GAAG,GAAG,CAAC,0BAA0B,EAAE;QAC9C,UAAU,EAAE,KAAK,CAAC,QAAQ;QAC1B,4BAA4B,EAAE,CAAC,KAAK,CAAC,KAAK;KAC7C,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;IAEpB,IAAI,MAAM,CAAC;IACX,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAClB,MAAM,GAAG,oBAAC,WAAI,IACV,IAAI,EAAE,KAAK,CAAC,SAAS,EACrB,IAAI,EAAE,eAAQ,CAAC,MAAM,EACrB,SAAS,EAAE,GAAG,CAAC,QAAQ,CAAC,EACxB,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,GAC/B,CAAC;IACP,CAAC;IAED,MAAM,CAAC,CACH,oBAAC,qBAAI,CAAC,GAAG,IACL,SAAS,EAAE,SAAS,EACpB,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE;QACnC,oBAAC,WAAI,IACE,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,cAAc,EAAE,GAAG,CAAC,sBAAsB,CAAC,EAC3C,IAAI,EAAE,eAAQ,CAAC,MAAM,EACrB,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,IACjC,KAAK,CAAC,KAAK,CAAQ;QAAC,MAAM,CAAY,CAC3C,CAAC;AACN,CAAC,CAAC;AAEF,qBAAa,CAAC,YAAY,GAAG;IACzB,IAAI,EAAE,SAAS;IACf,IAAI,EAAE,EAAC,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAC;CAC9C,CAAC;AAEF,kBAAe,qBAAa,CAAC","file":"ActionTrigger.js","sourcesContent":["import * as React from 'react';\r\nimport * as classNames from 'classnames/bind';\r\nimport {Icon, IconSize, IconAttributes} from '../Icon';\r\nimport {Elements as Attr, DivProps} from '../../Attributes';\r\nconst css = classNames.bind(require('./ActionTrigger.scss'));\r\n\r\nexport interface ActionTriggerAttributes {\r\n    container?: DivProps;\r\n    icon?: IconAttributes;\r\n    suffix?: IconAttributes;\r\n}\r\n\r\nexport interface ActionTriggerComponentType {}\r\n\r\nexport interface ActionTriggerProps extends React.Props<ActionTriggerComponentType> {\r\n    /** Icon name (from Segoe UI MDL font) */\r\n    icon: string;\r\n    /** Icon name for icon on the right of ActionTrigger (from Segoe UI MDL font) */\r\n    rightIcon?: string;\r\n    /** Action trigger label */\r\n    label?: string;\r\n\r\n    /** Disable Action Trigger */\r\n    disabled?: boolean;\r\n\r\n    /** Classname to append to top level element */\r\n    className?: string;\r\n\r\n    attr?: ActionTriggerAttributes;\r\n}\r\n\r\n/**\r\n * ActionTrigger showing Information, Warning, or Error with text, icon, and optional close button\r\n * \r\n * @param props Control properties (defined in `ActionTriggerProps` interface)\r\n */\r\nexport const ActionTrigger: React.StatelessComponent<ActionTriggerProps> = (props: ActionTriggerProps) => {\r\n    const className = css('action-trigger-container', {\r\n        'disabled': props.disabled,\r\n        'action-trigger-label-empty': !props.label\r\n    }, props.className);\r\n\r\n    let suffix;\r\n    if (props.rightIcon) {\r\n        suffix = <Icon \r\n            icon={props.rightIcon}\r\n            size={IconSize.xsmall}\r\n            className={css('suffix')}\r\n            attr={props.attr.suffix || {}}\r\n        />;\r\n    }\r\n\r\n    return (\r\n        <Attr.div\r\n            className={className}\r\n            attr={props.attr.container || {}}\r\n        ><Icon\r\n                icon={props.icon}\r\n                labelClassName={css('action-trigger-label')}\r\n                size={IconSize.xsmall}\r\n                attr={props.attr.icon || {}}\r\n        >{props.label}</Icon>{suffix}</Attr.div>\r\n    );\r\n};\r\n\r\nActionTrigger.defaultProps = {\r\n    icon: undefined,\r\n    attr: {container: {}, icon: {}, suffix: {}}\r\n};\r\n\r\nexport default ActionTrigger;\r\n"]}