{"version":3,"sources":["src/method/components/Icon/IconBackground.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,8CAA8C;AAC9C,iDAA4D;AAC5D,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;AAuBpD;;;;GAIG;AACU,QAAA,cAAc,GAAkD,CAAC,KAA0B,EAAE,EAAE;IACxG,IAAI,GAAG,GAAG,GAAG,CAAC;QACV,iBAAiB,EAAE,IAAI;QACvB,UAAU,EAAE,KAAK,CAAC,QAAQ;KAC7B,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;IAEpB,IAAI,KAAK,GAAG;QACR,eAAe,EAAE,KAAK,CAAC,eAAe;KACzC,CAAC;IAEF,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjB,KAAK,CAAC,OAAO,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,IAAI,CAAC;QACvC,KAAK,CAAC,QAAQ,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,IAAI,CAAC;QACxC,KAAK,CAAC,cAAc,CAAC,GAAG,GAAG,KAAK,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC;IACtD,CAAC;IAED,MAAM,CAAC,CAAC,oBAAC,qBAAI,CAAC,GAAG,IAAC,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AACnF,CAAC,CAAC;AAEF,sBAAc,CAAC,YAAY,GAAG;IAC1B,eAAe,EAAE,SAAS;IAC1B,QAAQ,EAAE,SAAS;IACnB,IAAI,EAAE;QACF,SAAS,EAAE,EAAE;KAChB;CACJ,CAAC;AAEF,kBAAe,sBAAc,CAAC","file":"IconBackground.js","sourcesContent":["import * as React from 'react';\r\nimport * as classNames from 'classnames/bind';\r\nimport {DivProps, Elements as Attr} from '../../Attributes';\r\nconst css = classNames.bind(require('./Icon.scss'));\r\n\r\nexport interface IconBackgroundType {}\r\n\r\nexport interface IconBackgroundAttributes {\r\n    container?: DivProps;\r\n}\r\n\r\nexport interface IconBackgroundProps extends React.Props<IconBackgroundType> {\r\n    /** Background color of circle */\r\n    backgroundColor: string;\r\n\r\n    /** Circle diameter in pixels */\r\n    diameter: number;\r\n    /** Center vertically and horizontally in parent element */\r\n    centered?: boolean;\r\n    \r\n    /** Classname to append to top level element */\r\n    className?: string;\r\n\r\n    attr?: IconBackgroundAttributes;\r\n}\r\n\r\n/**\r\n * Background circle for Icons\r\n * \r\n * @param props Control properties (Defined by `IconBackgroundProps` interface)\r\n */\r\nexport const IconBackground: React.StatelessComponent<IconBackgroundProps> = (props: IconBackgroundProps) => {\r\n    let cls = css({\r\n        'icon-background': true,\r\n        'centered': props.centered\r\n    }, props.className);\r\n\r\n    let style = {\r\n        backgroundColor: props.backgroundColor\r\n    };\r\n\r\n    if (props.diameter) {\r\n        style['width'] = `${props.diameter}px`;\r\n        style['height'] = `${props.diameter}px`;\r\n        style['borderRadius'] = `${props.diameter / 2}px`;\r\n    }\r\n\r\n    return (<Attr.div className={cls} style={style} attr={props.attr.container}/>);\r\n};\r\n\r\nIconBackground.defaultProps = {\r\n    backgroundColor: undefined,\r\n    diameter: undefined,\r\n    attr: {\r\n        container: {}\r\n    }\r\n};\r\n\r\nexport default IconBackground;\r\n"]}