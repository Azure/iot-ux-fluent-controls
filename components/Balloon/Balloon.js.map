{"version":3,"sources":["src/method/components/Balloon/Balloon.tsx"],"names":[],"mappings":"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","file":"Balloon.js","sourcesContent":["import * as React from 'react';\r\nimport * as classNames from 'classnames/bind';\r\nimport {DivProps, SpanProps, mergeAttributes, Elements as Attr} from '../../Attributes';\r\nimport {Dropdown} from '../Dropdown';\r\nimport {MethodNode} from '../../Common';\r\nconst css = classNames.bind(require('./Balloon.scss'));\r\n\r\nexport interface BalloonType {}\r\n\r\nexport enum BalloonPosition {\r\n    Top = 1,\r\n    Bottom,\r\n    Left,\r\n    Right\r\n}\r\n\r\nexport enum BalloonAlignment {\r\n    Start = 1,\r\n    Center,\r\n    End\r\n}\r\n\r\nexport interface BalloonAttributes {\r\n    container?: SpanProps;\r\n    balloonContainer?: DivProps;\r\n    balloon?: SpanProps;\r\n}\r\n\r\nexport interface BalloonProps extends React.Props<BalloonType> {\r\n    /** Contents of balloon */\r\n    tooltip: MethodNode;\r\n\r\n    /**\r\n     * Where to display Balloon relative to child element\r\n     * \r\n     * `BalloonPosition.[Top | Bottom | Left | Right]`\r\n     * \r\n     * Default: BalloonPosition.Top\r\n     */\r\n    position?: BalloonPosition;\r\n    /**\r\n     * Alignment of Balloon relative to child\r\n     * \r\n     * `BalloonAlignment.[Start | Center | End]`\r\n     * \r\n     * Default: BalloonAllignment.Center\r\n     */\r\n    align?: BalloonAlignment;\r\n    /**\r\n     * Allow Balloon contents to span multiple lines\r\n     * \r\n     * default: true\r\n     */\r\n    multiline?: boolean;\r\n    /**\r\n     * Allow balloon to reposition itself if it isn't completely visible\r\n     * \r\n     * default: true\r\n     */\r\n    autoPosition?: boolean;\r\n\r\n    /** Classname to append to top level element */\r\n    className?: string;\r\n    /** Classname to append to inner balloon element */\r\n    balloonClassName?: string;\r\n    /** Forces the balloon to be expanded */\r\n    expanded?: boolean;\r\n\r\n    attr?: BalloonAttributes;\r\n}\r\n\r\nexport interface BalloonState {\r\n    hovered?: boolean;\r\n    visible?: boolean;\r\n    position?: BalloonPosition;\r\n    align?: BalloonAlignment;\r\n}\r\n\r\nconst compareClientRect = (first: ClientRect, second: ClientRect): boolean => {\r\n    return (\r\n        first.left === second.left &&\r\n        first.right === second.right &&\r\n        first.top === second.top &&\r\n        first.bottom === second.bottom\r\n    );\r\n};\r\n\r\n/**\r\n * SimpleBalloon shows tooltip (with HTML) on hover over child\r\n * \r\n * NOTE: If a parent element of this control is `overflow: hidden` then the\r\n * balloon may not show up.\r\n * \r\n * @param props Control properties (defined in `SimpleBalloonProps` interface)\r\n */\r\nexport class Balloon extends React.Component<BalloonProps, BalloonState> {\r\n    static defaultProps = {\r\n        tooltip: undefined,\r\n        position: BalloonPosition.Top,\r\n        align: BalloonAlignment.Center,\r\n        expanded: false,\r\n        multiline: true,\r\n        autoPosition: true,\r\n        attr: {\r\n            container: {},\r\n            balloonContainer: {},\r\n            balloon: {},\r\n        }\r\n    };\r\n\r\n    constructor(props: BalloonProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hovered: false,\r\n            visible: this.props.expanded,\r\n            position: this.props.position,\r\n            align: this.props.align\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(newProps: BalloonProps) {\r\n        this.setState({\r\n            visible: this.state.hovered || newProps.expanded,\r\n            position: newProps.position,\r\n            align: newProps.align\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(newProps: BalloonProps, newState: BalloonState): boolean {\r\n        if (newProps !== this.props) {\r\n            return true;\r\n        }\r\n        if (this.state.visible !== newState.visible) {\r\n            return true;\r\n        }\r\n        if (this.state.position !== newState.position || this.state.align !== newState.align) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    onMouseEnter = (event) => {\r\n        this.setState({\r\n            hovered: true,\r\n            visible: true\r\n        });\r\n    }\r\n\r\n    onMouseLeave = (event) => {\r\n        this.setState({\r\n            hovered: false,\r\n            visible: this.props.expanded\r\n        });\r\n    }\r\n\r\n    getClassName(reverse: boolean): string {\r\n        let position, reversePosition;\r\n        switch (this.props.position) {\r\n            case BalloonPosition.Bottom:\r\n                position = 'bottom';\r\n                reversePosition = 'top';\r\n                break;\r\n            case BalloonPosition.Left:\r\n                position = 'left';\r\n                reversePosition = 'right';\r\n                break;\r\n            case BalloonPosition.Right:\r\n                position = 'right';\r\n                reversePosition = 'left';\r\n                break;\r\n            default:\r\n                position = 'top';\r\n                reversePosition = 'bottom';\r\n        }\r\n\r\n        let align;\r\n        switch (this.props.align) {\r\n            case BalloonAlignment.Start:\r\n                align = 'start';\r\n                break;\r\n            case BalloonAlignment.End:\r\n                align = 'end';\r\n                break;\r\n            default:\r\n                align = 'center';\r\n        }\r\n\r\n        return css(`${reverse ? reversePosition : position}-${align}`);\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            balloonClassName,\r\n            autoPosition,\r\n            multiline,\r\n            className\r\n        } = this.props;\r\n\r\n        balloonClassName = css(\r\n            'balloon-dropdown',\r\n            this.getClassName(false),\r\n            balloonClassName\r\n        );\r\n        className = css('balloon-container', className);\r\n        const innerClassName = css('balloon-inner-container', { multiline });\r\n        const positions = [this.getClassName(false), this.getClassName(true)];\r\n        return (\r\n            <Dropdown\r\n                dropdown={\r\n                    <span className={innerClassName}>\r\n                        {this.props.tooltip}\r\n                    </span>\r\n                }\r\n                visible={this.state.visible}\r\n                className={className}\r\n                positionClassNames={this.props.autoPosition ? positions : []}\r\n                onMouseEnter={this.onMouseEnter}\r\n                onMouseLeave={this.onMouseLeave}\r\n                attr={{\r\n                    container: this.props.attr.container,\r\n                    dropdownContainer: this.props.attr.balloonContainer,\r\n                    dropdown: mergeAttributes(\r\n                        this.props.attr.balloon,\r\n                        {className: balloonClassName}\r\n                    )\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </Dropdown>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Balloon;\r\n"]}