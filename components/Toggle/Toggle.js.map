{"version":3,"sources":["src/method/components/Toggle/Toggle.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,8CAA8C;AAC9C,iDAAyE;AACzE,yCAAsD;AACtD,MAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;AAgCtD;;;;GAIG;AACU,QAAA,MAAM,GAA0C,CAAC,KAAkB,EAAE,EAAE;IAChF,MAAM,kBAAkB,GAAG,GAAG,CAAC,QAAQ,EAAE;QACrC,WAAW,EAAE,KAAK,CAAC,EAAE;QACrB,UAAU,EAAE,KAAK,CAAC,QAAQ;KAC7B,CAAC,CAAC;IAEH,MAAM,OAAO,GAAG,CAAC,KAAK,EAAE,EAAE;QACtB,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAC9B,CAAC;IACL,CAAC,CAAC;IAEF,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC5C,MAAM,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC;IAExD,MAAM,CAAC,CACH,oBAAC,qBAAI,CAAC,GAAG,IAAC,SAAS,EAAE,kBAAkB,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS;QAC/D,oBAAC,qBAAI,CAAC,MAAM,IACR,IAAI,EAAC,QAAQ,EACb,SAAS,EAAE,GAAG,CAAC,eAAe,CAAC,EAC/B,OAAO,EAAE,OAAO,EAChB,QAAQ,EAAE,QAAQ,EAClB,IAAI,EAAE,KAAK,CAAC,IAAI,EAChB,SAAS,EAAE,KAAK,CAAC,SAAS,EAC1B,SAAS,EAAE,KAAK,CAAC,SAAS,IAAI,qBAAY,EAC1C,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,GACzB;QACF,oBAAC,qBAAI,CAAC,GAAG,IAAC,SAAS,EAAE,GAAG,CAAC,eAAe,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG;QACrE,oBAAC,qBAAI,CAAC,GAAG,IAAC,SAAS,EAAE,GAAG,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,IAC1D,KAAK,CACC,CACJ,CACd,CAAC;AACN,CAAC,CAAC;AAEF,cAAM,CAAC,YAAY,GAAG;IAClB,IAAI,EAAE,SAAS;IACf,QAAQ,EAAE,SAAS;IACnB,OAAO,EAAE,IAAI;IACb,QAAQ,EAAE,KAAK;IACf,IAAI,EAAE;QACF,SAAS,EAAE,EAAE;QACb,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,EAAE;QACV,MAAM,EAAE,EAAE;QACV,IAAI,EAAE,EAAE;KACX;CACJ,CAAC;AAEF,kBAAe,cAAM,CAAC","file":"Toggle.js","sourcesContent":["import * as React from 'react';\r\nimport * as classNames from 'classnames/bind';\r\nimport {DivProps, ButtonProps, Elements as Attr} from '../../Attributes';\r\nimport {MethodNode, autoFocusRef} from '../../Common';\r\nconst css = classNames.bind(require('./Toggle.scss'));\r\n\r\nexport interface ToggleType {}\r\n\r\nexport interface ToggleAttributes {\r\n    container?: DivProps;\r\n    button?: ButtonProps;\r\n    border?: DivProps;\r\n    switch?: DivProps;\r\n    text?: DivProps;\r\n}\r\n\r\nexport interface ToggleProps extends React.Props<ToggleType> {\r\n    on?: boolean;\r\n    /** Disable Action Trigger */\r\n    disabled?: boolean;\r\n    /** AutoFocus */\r\n    autoFocus?: boolean;\r\n\r\n    name: string;\r\n\r\n    onLabel?: MethodNode;\r\n    offLabel?: MethodNode;\r\n\r\n    onChange: (newValue: boolean) => void;\r\n\r\n    /** Classname to append to top level element */\r\n    className?: string;\r\n\r\n    attr?: ToggleAttributes;\r\n}\r\n\r\n/**\r\n * Toggle button that is an on or off state\r\n * \r\n * @param props Control properties (defined in `ToggleProps` interface)\r\n */\r\nexport const Toggle: React.StatelessComponent<ToggleProps> = (props: ToggleProps) => {\r\n    const containerClassName = css('toggle', {\r\n        'toggle-on': props.on,\r\n        'disabled': props.disabled\r\n    });\r\n\r\n    const onClick = (event) => {\r\n        if (!props.disabled && props.onChange) {\r\n            props.onChange(!props.on);\r\n        }\r\n    };\r\n\r\n    const tabIndex = props.disabled ? -1 : null;\r\n    const label = props.on ? props.onLabel : props.offLabel;\r\n\r\n    return (\r\n        <Attr.div className={containerClassName} attr={props.attr.container}>\r\n            <Attr.button\r\n                type='button'\r\n                className={css('toggle-button')}\r\n                onClick={onClick}\r\n                tabIndex={tabIndex}\r\n                name={props.name}\r\n                autoFocus={props.autoFocus}\r\n                methodRef={props.autoFocus && autoFocusRef}\r\n                attr={props.attr.button}\r\n            />\r\n            <Attr.div className={css('toggle-switch')} attr={props.attr.switch}/>\r\n            <Attr.div className={css('toggle-label')} attr={props.attr.text}>\r\n                {label}\r\n            </Attr.div>\r\n        </Attr.div>\r\n    );\r\n};\r\n\r\nToggle.defaultProps = {\r\n    name: undefined,\r\n    onChange: undefined,\r\n    onLabel: 'On',\r\n    offLabel: 'Off',\r\n    attr: {\r\n        container: {},\r\n        button: {},\r\n        border: {},\r\n        switch: {},\r\n        text: {},\r\n    }\r\n};\r\n\r\nexport default Toggle;\r\n"]}