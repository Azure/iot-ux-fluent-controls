{"version":3,"sources":["src/method/Attributes.ts"],"names":[],"mappings":"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","file":"Attributes.js","sourcesContent":["import * as React from 'react';\r\nimport * as classNames from 'classnames';\r\nimport { MethodNode } from './Common';\r\n\r\nexport type AttrProps<T extends HTMLElement> = React.HTMLProps<T> & React.ClassAttributes<T> & any;\r\n\r\nexport type AnchorProps = AttrProps<HTMLAnchorElement>;\r\nexport type ButtonProps = AttrProps<HTMLButtonElement>;\r\nexport type DivProps = AttrProps<HTMLDivElement>;\r\nexport type FooterProps = AttrProps<HTMLDivElement>;\r\nexport type HeaderProps = AttrProps<HTMLDivElement>;\r\nexport type InputProps = AttrProps<HTMLInputElement>;\r\nexport type ImageProps = AttrProps<HTMLImageElement>;\r\nexport type LabelProps = AttrProps<HTMLLabelElement>;\r\nexport type OptionProps = AttrProps<HTMLOptionElement>;\r\nexport type PreProps = AttrProps<HTMLPreElement>;\r\nexport type SectionProps = AttrProps<HTMLDivElement>;\r\nexport type SelectProps = AttrProps<HTMLSelectElement>;\r\nexport type SpanProps = AttrProps<HTMLSpanElement>;\r\nexport type TextAreaProps = AttrProps<HTMLTextAreaElement>;\r\n\r\nexport type HTMLElementAttr<T extends HTMLElement> = AttrProps<T> & {\r\n    ref?: React.Ref<T>\r\n};\r\n\r\nexport type AttrWrapperProps<T extends HTMLElement> = HTMLElementAttr<T> & {\r\n    attr?: any,\r\n    methodRef?: React.Ref<T>\r\n};\r\n\r\nexport type AttrWrapper<T extends HTMLElement> = (props: AttrWrapperProps<T>) => React.DOMElement<AttrWrapperProps<T>, T>;\r\n\r\nexport interface OptionAttr<T> {\r\n    attr?: T;\r\n}\r\n\r\nexport function mergeAttributeObjects<T, K extends keyof T>(leftInput: T, rightInput: T, names: K[]): T {\r\n    const output: any = {};\r\n    let left: any = leftInput || {};\r\n    let right: any = rightInput || {};\r\n    for (let name of names) {\r\n        const oldAttr: any = left[name] || {};\r\n        const newAttr: any = right[name] || {};\r\n        output[name] = mergeAttributes(oldAttr, newAttr);\r\n    }\r\n    return output;\r\n}\r\n\r\nexport function mergeAttributes<T extends HTMLElement>(leftAttr: HTMLElementAttr<T>, rightAttr: HTMLElementAttr<T>): HTMLElementAttr<T> {\r\n    const oldAttr = leftAttr || {};\r\n    const newAttr = rightAttr || {};\r\n    const className = classNames(oldAttr.className, newAttr.className);\r\n    if (oldAttr.className) {\r\n        delete oldAttr.className;\r\n    }\r\n    if (newAttr.className) {\r\n        delete newAttr.className;\r\n    }\r\n\r\n    const fnCombiner = {};\r\n    for (let key in oldAttr) {\r\n        if (newAttr[key]) {\r\n            const oldFn = oldAttr[key];\r\n            const newFn = newAttr[key];\r\n            if (oldFn instanceof Function && newFn instanceof Function) {\r\n                fnCombiner[key] = (...args) => {\r\n                    oldFn(...args);\r\n                    newFn(...args);\r\n                };\r\n                delete oldAttr[key];\r\n                delete newAttr[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    let ref = newAttr.ref;\r\n    if (oldAttr.ref) {\r\n        if (newAttr.ref) {\r\n            const oldRef = oldAttr.ref;\r\n            const newRef = newAttr.ref;\r\n            ref = (element) => {\r\n                oldRef(element);\r\n                newRef(element);\r\n            };\r\n            delete oldAttr.ref;\r\n        } else {\r\n            ref = oldAttr.ref;\r\n        }\r\n    }\r\n    if (newAttr.ref) {\r\n        delete newAttr.ref;\r\n    }\r\n\r\n    return {\r\n        ...oldAttr,\r\n        ...newAttr,\r\n        ...fnCombiner,\r\n        className,\r\n        ref\r\n    };\r\n}\r\n\r\nexport function AttrElementWrapper<T extends HTMLElement>(element: string): AttrWrapper<T> {\r\n    return function (props: AttrWrapperProps<T>): React.DOMElement<AttrWrapperProps<T>, T> {\r\n        props = { ...props };\r\n        let attr = { ...props.attr };\r\n        if (attr) {\r\n            delete props.attr;\r\n        } else {\r\n            let children;\r\n            if (props.children) {\r\n                children = props.children;\r\n                delete props.children;\r\n            }\r\n            return React.createElement(element, props, ...children);\r\n        }\r\n\r\n        const className = classNames(props.className, attr.className);\r\n        if (props.className) {\r\n            delete props.className;\r\n        }\r\n        if (attr.className) {\r\n            delete attr.className;\r\n        }\r\n\r\n        let ref = props.methodRef;\r\n        if (attr.ref) {\r\n            if (props.methodRef) {\r\n                const oldRef = props.methodRef;\r\n                const newRef = attr.ref;\r\n                ref = (element) => {\r\n                    newRef(element);\r\n                    oldRef(element);\r\n                };\r\n            } else {\r\n                ref = attr.ref;\r\n            }\r\n            delete attr.ref;\r\n        }\r\n        delete props.methodRef;\r\n\r\n        if (attr.key) {\r\n            if (DEBUG) {\r\n                console.error('Method Attribute API does not allow keys to be set on elements.');\r\n            }\r\n\r\n            delete attr.key;\r\n        }\r\n\r\n        let hasChildren = false;\r\n        let propChildren = [];\r\n        if (props.children) {\r\n            hasChildren = true;\r\n            propChildren = props.children;\r\n            delete props.children;\r\n        }\r\n        let attrChildren = [];\r\n        if (attr.children) {\r\n            hasChildren = true;\r\n            attrChildren = attr.children;\r\n            delete attr.children;\r\n        }\r\n\r\n        props = { ...props, ...attr, className, ref };\r\n\r\n        if (hasChildren) {\r\n            props.children = [propChildren].concat([attrChildren]);\r\n        }\r\n\r\n        return React.createElement(\r\n            element,\r\n            props\r\n        );\r\n    };\r\n}\r\n\r\nconst a = AttrElementWrapper<HTMLAnchorElement>('a');\r\nconst button = AttrElementWrapper<HTMLButtonElement>('button');\r\nconst div = AttrElementWrapper<HTMLDivElement>('div');\r\nconst footer = AttrElementWrapper<HTMLDivElement>('footer');\r\nconst header = AttrElementWrapper<HTMLDivElement>('header');\r\nconst input = AttrElementWrapper<HTMLInputElement>('input');\r\nconst image = AttrElementWrapper<HTMLInputElement>('img');\r\nconst label = AttrElementWrapper<HTMLLabelElement>('label');\r\nconst option = AttrElementWrapper<HTMLOptionElement>('option');\r\nconst pre = AttrElementWrapper<HTMLPreElement>('pre');\r\nconst section = AttrElementWrapper<HTMLDivElement>('section');\r\nconst select = AttrElementWrapper<HTMLSelectElement>('select');\r\nconst span = AttrElementWrapper<HTMLSpanElement>('span');\r\nconst textarea = AttrElementWrapper<HTMLTextAreaElement>('textarea');\r\n\r\nexport const Elements = {\r\n    a: a,\r\n    button: button,\r\n    div: div,\r\n    footer: footer,\r\n    header: header,\r\n    input: input,\r\n    image: image,\r\n    label: label,\r\n    option: option,\r\n    pre: pre,\r\n    section: section,\r\n    select: select,\r\n    span: span,\r\n    textarea: textarea,\r\n};\r\n\r\nexport default Elements;\r\n"]}