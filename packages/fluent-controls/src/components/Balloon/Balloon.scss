@import '../../common/overrides';
@import '../../common/mixins';

// Spec says 8px but setting to 8.5px to deal with browser rounding errors
$balloon-border: 8.5px solid md-color(shade, 3);
$transparent-border: 8.5px solid md-color(transparent);

@mixin arrow($location, $offset: 'center') {
    &:before {
        content:'';
        display:block;
        width:0;
        height:0;
        
        position:absolute;

        @if $location == 'top' {
            top: -7.5px;
            @if $offset == 'start' {
                left: 8px;
            } @else if $offset == 'end' {
                right: 8px;
            } @else {
                left: 50%;
                transform: translate(-50%, 0);
            }
        
            border-left: $transparent-border;
            border-right: $transparent-border;    
            border-bottom: $balloon-border;
        } @else if $location == 'left' {
            left: -7.5px;
            @if $offset == 'start' {
                top: 8px;
            } @else if $offset == 'end' {
                bottom: 8px;
            } @else {
                top: 50%;
                transform: translate(0, -50%);
            }
        
            border-top: $transparent-border;
            border-bottom: $transparent-border;    
            border-right: $balloon-border;
        } @else if $location == 'right' {
            right: -7.5px;
            @if $offset == 'start' {
                top: 8px;
            } @else if $offset == 'end' {
                bottom: 8px;
            } @else {
                top: 50%;
                transform: translate(0, -50%);
            }
        
            border-top: $transparent-border;
            border-bottom: $transparent-border;    
            border-left: $balloon-border;
        } @else {
            bottom: -7.5px;
            @if $offset == 'start' {
                left: 8px;
            } @else if $offset == 'end' {
                right: 8px;
            } @else {
                left: 50%;
                transform: translate(-50%, 0);
            }
        
            border-top: $balloon-border;
            border-left: $transparent-border;    
            border-right: $transparent-border;
        }
    }
}

@mixin position($location, $offset: 'center') {
    @if $location == 'top' {
        top: -12px;
        @if $offset == 'start' {
            left: 0px;
            transform: translate(0, -100%);
        } @else if $offset == 'end' {
            right: 0px;
            transform: translate(0, -100%);
        } @else {
            left: 50%;
            transform: translate(-50%, -100%);
        }
    } @else if $location == 'left' {
        left: -12px;
        @if $offset == 'start' {
            top: -6px;
            transform: translate(-100%);
        } @else if $offset == 'end' {
            bottom: -6px;
            transform: translate(-100%);
        } @else {
            top: 50%;
            transform: translate(-100%, -50%);
        }
    } @else if $location == 'right' {
        right: -12px;
        @if $offset == 'start' {
            top: -6px;
            transform: translate(100%);
        } @else if $offset == 'end' {
            bottom: -6px;
            transform: translate(100%);
        } @else {
            top: 50%;
            transform: translate(100%, -50%);
        }
    } @else {
        bottom: -12px;
        @if $offset == 'start' {
            left: 0px;
            transform: translate(0, 100%);
        } @else if $offset == 'end' {
            right: 0px;
            transform: translate(0, 100%);
        } @else {
            left: 50%;
            transform: translate(-50%, 100%);
        }
    }
}

.balloon-container {
    display: inline-block;
    text-decoration: none;
    position: relative;

    .balloon {
        display: none;
        position: absolute;
        z-index: 99;
        font-family: $font-family-base;
        padding: 12px 16px 16px 16px;
        background-color: md-color(shade, 3);
        color: md-color(shade, f);
        box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.1);
        
        .inner-container {
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;

            &.multiline {
                white-space: normal;
            }
        }
        
        header + section {
            margin-top: 16px;
        }
        
        section + section {
            margin-top: 16px;
        }

        section + footer {
            margin-top: 16px;
        }
    }
}

.balloon-container:hover {
    .balloon {
        display: inline;
    }

    .top-start {
        @include position('top', 'start');
        @include arrow('bottom', 'start');
    }

    .top-center {
        @include position('top', 'center');
        @include arrow('bottom', 'center');
    }
    
    .top-end {
        @include position('top', 'end');
        @include arrow('bottom', 'end');
    }

    .bottom-start {
        @include position('bottom', 'start');
        @include arrow('top', 'start');
    }

    .bottom-center {
        @include position('bottom', 'center');
        @include arrow('top', 'center');
    }
    
    .bottom-end {
        @include position('bottom', 'end');
        @include arrow('top', 'end');
    }

    .left-start {
        @include position('left', 'start');
        @include arrow('right', 'start');
    }

    .left-center {
        @include position('left', 'center');
        @include arrow('right', 'center');
    }
    
    .left-end {
        @include position('left', 'end');
        @include arrow('right', 'end');
    }

    .right-start {
        @include position('right', 'start');
        @include arrow('left', 'start');
    }

    .right-center {
        @include position('right', 'center');
        @include arrow('left', 'center');
    }
    
    .right-end {
        @include position('right', 'end');
        @include arrow('left', 'end');
    }
}