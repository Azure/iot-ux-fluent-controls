@import 'common';

$cancel-color: md-color(shade, 6);

$dropdown-border: 1px solid md-color(shade, c);
$dropdown-bg-color: md-color(shade, f);

$option-color: md-color(shade, 2);
$option-disabled-color: md-color(shade, 8);
$option-active-color: md-color(shade, f);
$option-selected-color: md-color(selected, dark);
$option-bg-color: md-color(shade, f);
$option-active-bg-color: md-color(shade, 0);
$option-selected-bg-color: md-color(selected, default);
$option-hover-selected-bg-color: md-color(selected, hover);
$option-hover-bg-color: md-color(shade, d);

$dropdown-z-index: $z-index-medium-step;

$arrow-default-color: md-color(shade, 4);

.combo-input-container {
    @include md-box(flex, relative);
    width: 100%;
    font-family: $font-family-base;

    color: $default-text-color;
    font-size: $font-size-text;
    line-height: 5*$grid;

    .input-container {
        @include md-box(block, relative);
        flex-grow: 1;
    }

    .input {
        @include md-box(block, relative);
        width: 100%;
        height: 8*$grid;
        padding: 2*$gutter 8*$gutter 2*$gutter 3*$gutter;
        border: $inactive-border;
        outline: none;

        &:hover {
            border: $default-border;
        }

        &:focus, &:active, &.visible {
            border: $default-border;

            &:not(.disabled) {
                padding-right: 16*$gutter;
            }

            &:valid:not(.disabled) {
                + .cancel {
                    display: inline-block;
                    color: $cancel-default-color;
                    pointer-events: auto;
                }
            }
        }
        
        &:disabled {
            color: $disabled-text-color;
            border: $disabled-border;
            background-color: $disabled-background-color;
    
            &::placeholder {
                color: $disabled-text-color;
            }
        }
    
        &::placeholder {
            color: $placeholder-text-color;
        }
    
        &::selection {
            color: $selection-text-color;
            background-color: $selection-background-color;
        }

        &.error:not(:disabled) {
            border: $error-border;
        }

        &::-ms-clear {
            display: none;
        }

        &:invalid {
            -moz-mox-shadow: none;
        }
    }

    .cancel {
        @include md-box(display-none, absolute);
        color: $cancel-color;
        font-size: $font-size-text;
        line-height: 4*$grid;
        padding: $gutter;
        top: $gutter;
        right: 8*$gutter;
        border: none;
        background-color: transparent;
        outline: none;
        pointer-events: none;
        cursor: pointer;

        &:active, &:focus {
            color: $cancel-default-color;
            pointer-events: auto;
        }
    }

    .chevron {
        @include md-box(absolute, block);
        font-size: $font-size-small;
        color: $arrow-default-color;
        right: 2*$gutter;
        top: 2*$gutter;
        pointer-events: none;
    }

    .dropdown:not(.above) {
        @include md-box(inline-block, absolute);
        left: 0px;
        top: 100%;
    }

    .dropdown.above {
        @include md-box(inline-block, absolute);
        left: 0px;
        top: -2*$gutter;
        transform: translateY(-100%);
    }
}

.dropdown {
    @include md-box(inline-block, relative);
    width: 100%;
    max-height: 200px;
    overflow-y: auto;
    background-color: $dropdown-bg-color;
    border: $dropdown-border;
}

.dropdown > div {
    @include md-box(inline-block, relative);
    width: 100%;
    padding: $gutter 0px;
}

.option {
    @include md-box(block);
    width: 100%;
    height: 8*$grid;
    line-height: 4*$grid;
    padding: 0px 3*$gutter;

    border: none;
    box-shadow: none;
    outline: none;
    border-radius: 0px;
    text-align: left;
    
    background-color: $option-bg-color;
    
    color: $option-color;

    &:not(.disabled) {
        cursor: pointer;
    }

    &.selected {
        color: $option-selected-color;
        background-color: $option-selected-bg-color;
    }

    &.hover:not(.disabled) {
        &:not(.selected) {
            background-color: $option-hover-bg-color;
        }

        &.selected {
            background-color: $option-hover-selected-bg-color;
        }

        &:active {
            color: $option-active-color;
            background-color: $option-active-bg-color;
        }
    }
    
    &.disabled {
        color: $option-disabled-color;
    }
}