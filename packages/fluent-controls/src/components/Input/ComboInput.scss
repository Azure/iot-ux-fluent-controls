@import '../../theme/index';

$component: md-component('combo-input', (
    color: (
        default: (color, input, default),
        disabled: (color, input, disabled),
        placeholder: (color, input, placeholder),
        selection: (color, input, selection),
        error: (color, input, error),
        cancel: (color, input, cancel),
        arrow: (color, input, arrow),        
        option: (
            default: (color, neutral, primary, alt, 2),
            disabled: (color, neutral, secondary, alt, 5),
            active: (color, white),
            selected: (color, interactive, dark),
        ),
    ),
    bg-color: (
        input: (bg-color, input, default),
        dropdown: (bg-color, input, default),
        selection: (bg-color, input, selection),
        disabled: (bg-color, input, disabled),
        option: (
            default: (color, white),
            active: (color, black),
            hover: (color, neutral, tertiary, alt, 2),
            selected: (
                default: (color, interactive, default),
                hover: (color, interactive, hover),
            ),
        )
    ),
    border: (
        default: (border, input, default),
        disabled: (border, input, disabled),
        focus: (border, input, focus),
        error: (border, input, error),
        dropdown: (border, combo-input, dropdown)
    ),
    font: (
        default: (font, default),
        size: (
            default: (font, size, default), 
            small: (font, size, small),
        ),
        line-height: (
            default: 5*$grid,
            small: 4*$grid,
        ),
    ),
    size: (
        input: (
            height: (size, input, height)
        ),
        option: (
            height: (size, input, option, height),
        ),
        dropdown: (
            max-height: (size, input, dropdown, max-height),
        ),
    )
));

$dropdown-z-index: $z-index-medium-step;

.combo-input-container {
    @include md-box(flex, relative);
    width: 100%;
    font-family: $font-family-default;

    color: $color-text-default;
    font-size: font(size);
    line-height: font(line-height);

    .input-container {
        @include md-box(block, relative);
        flex-grow: 1;
    }

    .input {
        @include md-box(block, relative);
        width: 100%;
        height: size(input, height);
        padding: 2*$gutter 8*$gutter 2*$gutter 3*$gutter;
        border: $border-default;
        outline: none;

        background-color: $color-bg-default;

        &:hover {
            border: $border-active;
        }

        &:focus, &:active, &.visible {
            border: $border-active;

            &:not(.disabled) {
                padding-right: 16*$gutter;
            }

            &:valid:not(.disabled) {
                + .cancel {
                    display: inline-block;
                    color: $color-text-cancel;
                    pointer-events: auto;
                }
            }
        }
        
        &:disabled {
            color: $color-text-disabled;
            border: $border-disabled;
            background-color: $color-bg-disabled;
    
            &::placeholder {
                color: $color-text-disabled;
            }
        }
    
        &::placeholder {
            color: $color-text-placeholder;
        }
    
        &::selection {
            color: $color-text-bright;
            background-color: $color-bg-selected;
        }

        &.error:not(:disabled) {
            border: $border-error;
        }

        &::-ms-clear {
            display: none;
        }

        &:invalid {
            box-shadow: none;
        }
    }

    .cancel {
        @include md-box(display-none, absolute);
        color: $color-text-cancel;
        font-size: font(size, default);
        line-height: font(line-height, small);
        padding: $gutter;
        top: $gutter;
        right: 8*$gutter;
        border: none;
        background-color: transparent;
        outline: none;
        pointer-events: none;
        cursor: pointer;

        &:active, &:focus {
            color: $color-text-cancel;
            pointer-events: auto;
        }
    }

    .chevron {
        @include md-box(absolute, block);
        font-size: font(size, small);
        color: $color-text-chevron;
        right: 2*$gutter;
        top: 2*$gutter;
        pointer-events: none;
    }

    .dropdown:not(.above) {
        @include md-box(inline-block, absolute);
        left: 0px;
        top: 100%;
    }

    .dropdown.above {
        @include md-box(inline-block, absolute);
        left: 0px;
        top: -2*$gutter;
        transform: translateY(-100%);
    }
}

.dropdown {
    @include md-box(inline-block, relative);
    width: 100%;
    max-height: size(dropdown, max-height);
    overflow-y: auto;
    background-color: $color-bg-default;
    border: $border-default;
}

.dropdown > div {
    @include md-box(inline-block, relative);
    width: 100%;
    padding: $gutter 0px;
}

.option {
    @include md-box(block);
    width: 100%;
    height: size(option, height);
    line-height: font(line-height, small);
    padding: 0px 3*$gutter;

    border: none;
    box-shadow: none;
    outline: none;
    border-radius: 0px;
    text-align: left;
    
    background-color: $color-bg-default;
    
    color: $color-text-default;

    &:not(.disabled) {
        cursor: pointer;
    }

    &.selected {
        color: $color-text-default;
        background-color: $color-bg-selected;
    }

    &.hover:not(.disabled) {
        &:not(.selected) {
            background-color: $color-bg-hover;
        }

        &.selected {
            background-color: $color-bg-selected-hover;
        }

        &:active {
            color: $color-text-bright;
            background-color: $color-bg-pressed;
        }
    }
    
    &.disabled {
        color: $color-text-disabled;
    }
}